<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YiluoTalk</title>
  
  <subtitle>享受每一天，Just Enjoy !</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yiluotalk.com/"/>
  <updated>2020-01-05T05:53:14.000Z</updated>
  <id>https://yiluotalk.com/</id>
  
  <author>
    <name>伊洛</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>这篇文章可能会提高你的写作能力</title>
    <link href="https://yiluotalk.com/2020/01/05/%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%8F%90%E9%AB%98%E4%BD%A0%E7%9A%84%E5%86%99%E4%BD%9C%E8%83%BD%E5%8A%9B/"/>
    <id>https://yiluotalk.com/2020/01/05/%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%8F%90%E9%AB%98%E4%BD%A0%E7%9A%84%E5%86%99%E4%BD%9C%E8%83%BD%E5%8A%9B/</id>
    <published>2020-01-05T05:52:59.000Z</published>
    <updated>2020-01-05T05:53:14.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTg3YzU2NjUxM2FiOWIwOTEucG5n?x-oss-process=image/format,png" alt=""></p><h1 id="01"><a href="#01" class="headerlink" title="01"></a>01</h1><h6 id="不知如何下笔，不知写什么内容"><a href="#不知如何下笔，不知写什么内容" class="headerlink" title="不知如何下笔，不知写什么内容"></a>不知如何下笔，不知写什么内容</h6><p>现在是一个内容为王的时代，很多人都投入到了创造的行列</p><p>刚开始大多会遇到不知写什么，如何去写的时间段。会感觉自己写的内容没有任何观点，内容苍白无力</p><p>甚至大多时候，写出来的文章逻辑混乱不清</p><blockquote><p>本文首发于伊洛的个人博客：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyiluotalk.com" target="_blank" rel="noopener">https://yiluotalk.com</a>，欢迎关注并查看更多内容！！！</p></blockquote><h6 id="如何开始"><a href="#如何开始" class="headerlink" title="如何开始"></a>如何开始</h6><p>写就好了！！！</p><p>做一个生活中的观察者，把自己工作中的一些经验，生活中的一些感悟，可能会对其它人有所帮助的内容总结出来，写就好了！</p><h6 id="完成比完美更重要"><a href="#完成比完美更重要" class="headerlink" title="完成比完美更重要"></a>完成比完美更重要</h6><p>让输出倒逼自己对知识的输入</p><h6 id="多向头部学习借鉴"><a href="#多向头部学习借鉴" class="headerlink" title="多向头部学习借鉴"></a>多向头部学习借鉴</h6><p>做任何事情都需要有反馈，有复盘，自己写好的文章多留意下别人给出的建议</p><p>多去看看头部的一些文章，借鉴别人写文中的一些优点，然后复盘自己的文章，多发现自己的不足，下次写新的文章时就要有所改进</p><h6 id="手机系统软件都需要升级，对待文章也应该像对待产品一样，要不断的打磨迭代"><a href="#手机系统软件都需要升级，对待文章也应该像对待产品一样，要不断的打磨迭代" class="headerlink" title="手机系统软件都需要升级，对待文章也应该像对待产品一样，要不断的打磨迭代"></a>手机系统软件都需要升级，对待文章也应该像对待产品一样，要不断的打磨迭代</h6><h1 id="02"><a href="#02" class="headerlink" title="02"></a>02</h1><h6 id="巧用模版"><a href="#巧用模版" class="headerlink" title="巧用模版"></a>巧用模版</h6><p>还记不记得小的生活老师教写作文？ 会有一些固定的句式</p><p>如果你忘记了小学怎样写作文的话</p><h6 id="那么高中或者初中写英语作文的时候，你一定被老师要求背过固定的句式"><a href="#那么高中或者初中写英语作文的时候，你一定被老师要求背过固定的句式" class="headerlink" title="那么高中或者初中写英语作文的时候，你一定被老师要求背过固定的句式"></a>那么高中或者初中写英语作文的时候，你一定被老师要求背过固定的句式</h6><p>比如</p><p>In my opinion<br>我的观点</p><p>Recently, the problem of …has aroused people’s concern.<br>最近，……问题已引起人们的注意</p><p>It is commonly believed that … / It is a common belief that …<br>人们一般认为……</p><p>Different people hold different attitudes toward…….<br>对……人们的态度各不相同</p><p>No doubt, unless we take effective measures, it is very likely that …<br>毫无疑问，除非我们采取有效措施,很可能会……</p><p>######老师会让你背一些“万金油” 的句子 ，然后你在写作文的时候不仅可以完美的凑齐字数，还会“显得” ，没错就是显得你的文章很漂亮</p><h1 id="03"><a href="#03" class="headerlink" title="03"></a>03</h1><p>那么同理，写汉语当然也可以用到模版</p><h6 id="当你引入一些观点"><a href="#当你引入一些观点" class="headerlink" title="当你引入一些观点"></a>当你引入一些观点</h6><p>最近，许多媒体／学者／专家认为……</p><h6 id="当你想表达一些观点"><a href="#当你想表达一些观点" class="headerlink" title="当你想表达一些观点"></a>当你想表达一些观点</h6><p>传统观念认为……<br>在我们的一生中，经常会听到这样的一种说法……<br>你大概会认为……</p><h6 id="自己表达观点"><a href="#自己表达观点" class="headerlink" title="自己表达观点"></a>自己表达观点</h6><p>我一直认为……<br>虽然我现在应该有了更多的了解，但我还是不禁会认为……<br>我即认为……又相信……</p><h6 id="引入假设或推论"><a href="#引入假设或推论" class="headerlink" title="引入假设或推论"></a>引入假设或推论</h6><p>虽然没有……直接说出来，但是他们将成给我一种……<br>从 ……      对   ……看法中可以得出一个结论……</p><h6 id="引入争议"><a href="#引入争议" class="headerlink" title="引入争议"></a>引入争议</h6><p>关于  ……这个主题……大多数人认为……但是，共识之外……这个问题……有人坚信……其他人认为……<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWVhNWI0MDA4NjYzMTNjZTkuanBn?x-oss-process=image/format,png" alt=""></p><h1 id="04"><a href="#04" class="headerlink" title="04"></a>04</h1><h6 id="巧用连词"><a href="#巧用连词" class="headerlink" title="巧用连词"></a>巧用连词</h6><h6 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h6><p>还有，实际上，而且，事实上，此外，另外，不仅如此</p><h6 id="承接"><a href="#承接" class="headerlink" title="承接"></a>承接</h6><p>实际上，换言之，展开来讲，坦率的来讲，简单讲，归根结底</p><h6 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h6><p>毕竟，例如，具体来看，试想，比如</p><h6 id="因果"><a href="#因果" class="headerlink" title="因果"></a>因果</h6><p>据此，所以，那么，于是</p><h6 id="平时多总结别人文章中比较好的连词"><a href="#平时多总结别人文章中比较好的连词" class="headerlink" title="平时多总结别人文章中比较好的连词"></a>平时多总结别人文章中比较好的连词</h6><h1 id="05"><a href="#05" class="headerlink" title="05"></a>05</h1><p>巧用经句<br>如今内容爆发，每个人的阅读都好像是在刷朋友圈</p><p>如何快速的在刷的过程中吸引到读者的注意力就很关键</p><p>就如同大家逛街，在琳琅满目的商品中要吸引到顾客的注意力 ，那么一篇文章中最好的吸引方式就是经典的句子 </p><p>######注意文章中经典的语句最好加粗，让读者很容易留意</p><h1 id="06"><a href="#06" class="headerlink" title="06"></a>06</h1><p>最好有些故事，可以让读者进入心流的状态</p><p>当每个人听故事的时候，其实是注意力最集中也是最感兴趣的时候，你肯定会留意到很多头部的文章几乎都会</p><p>这样开头</p><h6 id="我有一个同事，我有一个闺蜜，我一个发小……"><a href="#我有一个同事，我有一个闺蜜，我一个发小……" class="headerlink" title="我有一个同事，我有一个闺蜜，我一个发小……"></a>我有一个同事，我有一个闺蜜，我一个发小……</h6><p>这样就可以快速的吸引读者的好奇心，很容易让读者带入到你的故事中 </p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWU1ZTk4ZmEzYTEyM2U0ZTUucG5n?x-oss-process=image/format,png" alt=""></p><blockquote><p>欢迎下方【戳一下】【点赞】<br>  Author：伊洛Yiluo<br>  愿你享受每一天，Just Enjoy !</p></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWEwZjc5NDJkNGM2ZmM4ZGYucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="生活文集" scheme="https://yiluotalk.com/categories/%E7%94%9F%E6%B4%BB%E6%96%87%E9%9B%86/"/>
    
    
      <category term="伊洛文集" scheme="https://yiluotalk.com/tags/%E4%BC%8A%E6%B4%9B%E6%96%87%E9%9B%86/"/>
    
      <category term="文集" scheme="https://yiluotalk.com/tags/%E6%96%87%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>Python requests库(二)</title>
    <link href="https://yiluotalk.com/2020/01/04/Python%20requests%E5%BA%93(%E4%BA%8C)/"/>
    <id>https://yiluotalk.com/2020/01/04/Python%20requests%E5%BA%93(%E4%BA%8C)/</id>
    <published>2020-01-04T08:36:59.000Z</published>
    <updated>2020-01-04T08:36:34.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTAzM2Q3MjFmZDllZDRlYTkucG5n?x-oss-process=image/format,png" alt=""></p><p>本文是<a href="https://www.jianshu.com/p/384aa8b0f3ab" target="_blank" rel="noopener">Python requests库 (一)</a>的后续，简单的介绍一下<code>python</code>第三方库 <code>requests</code>的一些简单的高级用法</p><blockquote><p>本文首发于伊洛的个人博客：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyiluotalk.com" target="_blank" rel="noopener">https://yiluotalk.com</a>，欢迎关注并查看更多内容！！！</p></blockquote><h5 id="1-文件上传"><a href="#1-文件上传" class="headerlink" title="1. 文件上传"></a>1. 文件上传</h5><ul><li>通过<code>request</code> 上传一张<code>photo</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>files = &#123;<span class="string">'file'</span>:open(<span class="string">'photo.jpg'</span>, <span class="string">'rb'</span>)&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.post(<span class="string">'http://httpbin.org/post'</span>, files=files)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(r.text)</span><br></pre></td></tr></table></figure><h5 id="2-获取-cookies"><a href="#2-获取-cookies" class="headerlink" title="2. 获取 cookies"></a>2. 获取 cookies</h5></li><li>访问知乎，然后获取<code>cookies</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">"https://www.zhihu.com"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(r.cookies)</span><br><span class="line">&lt;RequestsCookieJar[&lt;Cookie _xsrf=kpkc08adzcWJ2IZXxQAh85ujvtFiPArj <span class="keyword">for</span> .zhihu.com/&gt;]&gt;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-会话维持"><a href="#3-会话维持" class="headerlink" title="3. 会话维持"></a>3. 会话维持</h5><ul><li>如果需要访问的网页是需要登陆之后再使用的话就需要会话维持，一般在做接口自动化测试或者爬虫一些网站的时候，都是需要保持登录态<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>requests.get(<span class="string">"http://httpbin.org/cookies/set/number/123456789"</span>)</span><br><span class="line">&lt;Response [<span class="number">200</span>]&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">'http://httpbin.org/cookies'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(r.text)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"cookies"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>上面并没有获取到<code>cookies</code> ,因为<code>request</code>设置<code>cookie</code>和后来的获取<code>cookie</code>相当于打开了两个浏览器</li><li>如何解决这个问题，我们需要用到<code>session</code> ，这是在自动化接口测试或者爬虫中经常会被用到，有必要掌握<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = requests.Session()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.get(<span class="string">'http://httpbin.org/cookies/set/number/123456789'</span>)</span><br><span class="line">&lt;Response [<span class="number">200</span>]&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = s.get(<span class="string">'http://httpbin.org/cookies'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(r.text)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"cookies"</span>: &#123;</span><br><span class="line">    <span class="string">"number"</span>: <span class="string">"123456789"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>以上，成功保持会话</li></ul><h5 id="4-SSL证书验证"><a href="#4-SSL证书验证" class="headerlink" title="4. SSL证书验证"></a>4. SSL证书验证</h5><ul><li>你肯定会有过类似的这种经历，当你打开一个网页的时候会提示你访问的地址不安全，这是由于<code>https</code>协议需要证书</li><li>程序访问后一定会报出 <code>SSLError</code>错误</li><li>解决方式</li></ul><p>1.设置<code>verify = False</code><br>2.传入证书 <code>cert=&quot;你的证书&quot;</code></p><h5 id="5-代理设置"><a href="#5-代理设置" class="headerlink" title="5.代理设置"></a>5.代理设置</h5><ul><li>爬虫的时候通常会设置代理</li><li>方式在<code>proxies=输入你的代理</code></li></ul><h5 id="6-超时设置"><a href="#6-超时设置" class="headerlink" title="6. 超时设置"></a>6. 超时设置</h5><ul><li>限制应答时间，比如访问伊洛的个人博客<a href="https://yiluotalk.com">https://yiluotalk.com</a> ,设置超时<code>1s</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">"https://yiluotalk.com"</span>, timeout = <span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(r.status_code)</span><br><span class="line"><span class="number">200</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="7-身份认证"><a href="#7-身份认证" class="headerlink" title="7.身份认证"></a>7.身份认证</h5><ul><li>一些网站当你访问的时候首先会让你登录做验证</li><li>解决方式，传入<code>auth</code> 参数 <code>auth=HTTPBasicAuth(&#39;user&#39;, &#39;password&#39;)</code></li></ul><p><img src="https://img-blog.csdnimg.cn/20200104163344340.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWJjNTA1ZmY3MzYyYmZmZWUucG5n?x-oss-process=image/format,png" alt=""><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTM0NWZlMWYyMDJmMWJmNDAucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="Python第三方库" scheme="https://yiluotalk.com/categories/Python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Zero to Hero" scheme="https://yiluotalk.com/tags/Zero-to-Hero/"/>
    
      <category term="第三方库" scheme="https://yiluotalk.com/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>爬虫基础原理 Zero to Hero (一)</title>
    <link href="https://yiluotalk.com/2020/01/03/%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86%20Zero%20to%20Hero%20(%E4%B8%80)/"/>
    <id>https://yiluotalk.com/2020/01/03/%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86%20Zero%20to%20Hero%20(%E4%B8%80)/</id>
    <published>2020-01-03T09:15:59.000Z</published>
    <updated>2020-01-03T09:45:33.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLThkZTk0OWZjZmExNmJkOGQucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="1-什么是爬虫？"><a href="#1-什么是爬虫？" class="headerlink" title="1.什么是爬虫？"></a>1.什么是爬虫？</h5><p><strong>网络爬虫</strong>（英语：web crawler），也叫<strong>网络蜘蛛</strong>（spider），是一种用来自动浏览<a href="https://zh.wikipedia.org/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91" target="_blank" rel="noopener" title="万维网">万维网</a>的<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E6%9C%BA%E5%99%A8%E4%BA%BA" target="_blank" rel="noopener">网络机器人</a></p><blockquote><p>本文首发于伊洛的个人博客：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyiluotalk.com" target="_blank" rel="noopener">https://yiluotalk.com</a>，欢迎关注并查看更多内容！！！</p></blockquote><ul><li>其实通俗的来讲，本质上爬虫就是自动化的程序，自动化模拟人的操作。比如在网站上下载小说，下载图片，下载视频等等。如果让你本人下载<code>1-2</code>张图片可能很容易，但是如果让你下载<code>100</code>张甚至<code>10000</code>张图片的话，就一定会发狂了。所以就交给自动化的爬虫来帮你下载<code>10000</code>张图片！解放你的双手～<h5 id="2-浏览器获取数据过程"><a href="#2-浏览器获取数据过程" class="headerlink" title="2.浏览器获取数据过程"></a>2.浏览器获取数据过程</h5><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWYwODdlZTU2MGJmMTNkZTUucG5n?x-oss-process=image/format,png" alt=""></li><li>浏览器向服务等发送<code>http</code>，<code>request</code>请求</li><li>服务器响应<code>response</code></li><li>浏览器<code>解析数据</code></li><li>展示给用户<h5 id="3-Rquest-和-Response"><a href="#3-Rquest-和-Response" class="headerlink" title="3.Rquest 和 Response"></a>3.Rquest 和 Response</h5></li><li><code>Request</code> 包含内容</li></ul><p>1.请求方式通常有<code>Get</code> <code>Post</code> <code>Put</code> <code>Delete</code><br>2.请求<code>URL</code><br>3.请求头<br>4.请求体</p><ul><li><p>来请求一些伊洛的个人博客 <a href="https://yiluotalk.com">https://yiluotalk.com</a><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTczMzU3YWQzNjZlNzY2MDcucG5n?x-oss-process=image/format,png" alt=""></p></li><li><p>点击<code>Network</code>,查看<code>headers</code><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTRkNjUwNWQ1ZTkzN2FjZWUucG5n?x-oss-process=image/format,png" alt=""></p></li><li><p>注意一般服务器会对请求数据做校验，一般在请求头里面需要加<code>user-agent</code><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWUwNzFiY2JkY2MyNDFiMTEucG5n?x-oss-process=image/format,png" alt=""></p></li><li><p><code>Response</code> 包含内容</p></li></ul><p>1.响应状态 ，<code>状态码</code><br>2.响应头 <code>response</code> <code>headers</code><br>3.响应体信息</p><ul><li>来看一下伊洛博客的返回<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTIyODAyNzJhMWEzOThjZDAucG5n?x-oss-process=image/format,png" alt=""></li><li>返回的是<code>html</code>页面<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTllYjNjNTE4Y2ZiYmQwNzUucG5n?x-oss-process=image/format,png" alt=""></li></ul><h5 id="4-爬虫的过程"><a href="#4-爬虫的过程" class="headerlink" title="4. 爬虫的过程"></a>4. 爬虫的过程</h5><ul><li>通过上面我们已经比较清楚了，浏览器请求服务器到服务器响应，浏览器解析展示给用户的简单过程，那么我们爬虫的话大概分几步呢<br>通常来说分为四个步骤</li><li>1.爬取数据 发起<code>http</code>请求 （来用<code>python</code>代码演示下）<br>可能需要爬取的数据是会有 <code>Html文档</code>，<code>Json格式文本</code>，<code>图片</code>，<code>视频</code>，等<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">"https://yiluotalk.com"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(r.status_code)</span><br><span class="line"><span class="number">200</span></span><br></pre></td></tr></table></figure></li><li>2.获取响应内容<br>如上获取了响应的状态码为<code>200</code></li><li>3.解析内容<br>解析的方式可能有很多种，后续展开讲述下</li></ul><ol><li>直接处理</li><li><code>Json</code> 解析</li><li><code>正则表达式</code></li><li>有很多好用的第三方库，比如 <code>BeautifulSoup</code> <code>pyquery</code>  <code>scrapy</code> 还有<code>xpath</code>也可以<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure></li></ol><ul><li>响应的是<code>html</code>文件<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTYyNDczMzM2MGMwODVmMWEucG5n?x-oss-process=image/format,png" alt=""></li></ul><p>5.保存数据</p><ul><li>保存数据一般分为以下几种，后续展开来讲<br><code>纯文本</code>， <code>Json</code> <code>Xml</code>，<code>关系形数据库（Mysql）</code>，<code>非关系型数据库（Mongodb）</code>，<code>二进制文件</code>等<h5 id="5-找不到要爬取的数据"><a href="#5-找不到要爬取的数据" class="headerlink" title="5. 找不到要爬取的数据"></a>5. 找不到要爬取的数据</h5>由于一些网站的页面是动态获取的，所以最后你看到的页面可能是通过<code>js渲染</code>出来的，那么怎么来处理呢，简单的可以分为</li></ul><p>1.分析<code>ajax</code>请求，<code>json</code>格式字符串<br>2.<code>selenium</code> <code>webdriver</code> 浏览器驱动<br>3.<code>splash</code><br>4.<code>pyv8</code>，<code>ghost8</code></p><ul><li>这里先简单的介绍下模拟人工浏览器的方式，也就是 <code>WEB自动化测试</code>经常用到的，<code>selenium</code> ，可以翻下伊洛之前介绍<code>selenium</code> <code>webdriver</code>自动化测试的的相关文章</li><li>依旧是访问 <a href="https://yiluotalk.com">https://yiluotalk.com</a><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTIxY2Q3MTFmZTUyODg5MmEucG5n?x-oss-process=image/format,png" alt=""></li><li>输入网址<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTU0OTI1YmMzMGUxNzdlNzIucG5n?x-oss-process=image/format,png" alt=""></li><li>这样通过浏览器驱动的方式访问的就会正确的获得响应的所有信息</li></ul><p><img src="https://img-blog.csdnimg.cn/20200103174004965.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTA5N2JiYmJmNWEyOWY0NzcucG5n?x-oss-process=image/format,png" alt=""></p><blockquote><p>欢迎下方【戳一下】【点赞】<br>  Author：伊洛Yiluo<br>  愿你享受每一天，Just Enjoy !</p></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWI5ODE4OThiZTY1MzYzOTQucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="Python爬虫" scheme="https://yiluotalk.com/categories/Python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Zero to Hero" scheme="https://yiluotalk.com/tags/Zero-to-Hero/"/>
    
      <category term="Python爬虫" scheme="https://yiluotalk.com/tags/Python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>老司机都知道的Python语法小技巧 (三) 放弃 if-elif</title>
    <link href="https://yiluotalk.com/2020/01/02/%E8%80%81%E5%8F%B8%E6%9C%BA%E9%83%BD%E7%9F%A5%E9%81%93%E7%9A%84Python%E8%AF%AD%E6%B3%95%E5%B0%8F%E6%8A%80%E5%B7%A7%20(%E4%B8%89)%20%E6%94%BE%E5%BC%83%20if-elif/"/>
    <id>https://yiluotalk.com/2020/01/02/%E8%80%81%E5%8F%B8%E6%9C%BA%E9%83%BD%E7%9F%A5%E9%81%93%E7%9A%84Python%E8%AF%AD%E6%B3%95%E5%B0%8F%E6%8A%80%E5%B7%A7%20(%E4%B8%89)%20%E6%94%BE%E5%BC%83%20if-elif/</id>
    <published>2020-01-02T03:32:59.000Z</published>
    <updated>2020-01-02T03:32:50.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTU5MDc1MTQyMWJlMDQ0NWIucG5n?x-oss-process=image/format,png" alt=""></p><p>大家新年好呀，今天再来说下<code>Python</code>老司机常用的小技巧，让你告别‘乏味的’<code>if-elif</code>，话不多说直接来看一个输出今天周几的例子</p><blockquote><p>本文首发于伊洛的个人博客：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyiluotalk.com" target="_blank" rel="noopener">https://yiluotalk.com</a>，欢迎关注并查看更多内容！！！</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">week_day = datetime.date(<span class="number">2020</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> week_day.weekday() == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'今天是星期一'</span>)</span><br><span class="line"><span class="keyword">elif</span> week_day.weekday() == <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">'今天是星期二'</span>)</span><br><span class="line"><span class="keyword">elif</span> week_day.weekday() == <span class="number">2</span>:</span><br><span class="line">    print(<span class="string">'今天是星期三'</span>)</span><br><span class="line"><span class="keyword">elif</span> week_day.weekday() == <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'今天是星期四'</span>)</span><br><span class="line"><span class="keyword">elif</span> week_day.weekday() == <span class="number">4</span>:</span><br><span class="line">    print(<span class="string">'今天是星期五'</span>)</span><br><span class="line"><span class="keyword">elif</span> week_day.weekday() == <span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'今天是星期六'</span>)</span><br><span class="line"><span class="keyword">elif</span> week_day.weekday() == <span class="number">6</span>:</span><br><span class="line">    print(<span class="string">'今天是星期日'</span>)</span><br></pre></td></tr></table></figure><ul><li><code>weekday()</code>函数返回的是当前日期所在的星期数</li><li>运行看以下结果<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">今天是星期四</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li>没错今天就是周四</li><li>可以看到上面的代码看上去好像很复杂而且码代码的时候也很容易出现错误，比如你入门<code>python</code>的时候肯定会做一些类似于工资计算器的小程序，你计算公积金或者税率工资分段的时候要不断的用到<code>if-elif</code>，这样很容易出现错误</li><li>那么有没有更好的方式避免或者优化呢</li><li>当然作为<code>python</code>老司机的话都会用到调度表</li><li>简单来看一个例子<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">dispatch = &#123;</span><br><span class="line">  <span class="number">0</span>: <span class="string">'今天是星期一'</span>,</span><br><span class="line">  <span class="number">1</span>: <span class="string">'今天是星期二'</span>,</span><br><span class="line">  <span class="number">2</span>: <span class="string">'今天是星期三'</span>,</span><br><span class="line">  <span class="number">3</span>: <span class="string">'今天是星期四'</span>,</span><br><span class="line">  <span class="number">4</span>: <span class="string">'今天是星期五'</span>,</span><br><span class="line">  <span class="number">5</span>: <span class="string">'今天是星期六'</span>,</span><br><span class="line">  <span class="number">6</span>: <span class="string">'今天是星期日'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">week_day = datetime.date(<span class="number">2020</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">print(dispatch[week_day.weekday()])</span><br></pre></td></tr></table></figure></li><li>这里其实就是一个<code>python</code>的字典</li><li>看上去是不是稍微的简洁简化了呢</li><li>重要的是会避免出错（当你<code>if-elif</code>很多的情况下，就一定会有这种体会了）</li><li>最后来输出看看结果<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">今天是星期四</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li>结果一致，适当的放弃<code>if-elif</code>吧，让你的代码不仅美观还少出错</li></ul><p><img src="https://img-blog.csdnimg.cn/20200102112934439.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTBmYjk4ZDM3OGIyZmZiZDAucG5n?x-oss-process=image/format,png" alt=""></p><blockquote><p>欢迎下方【戳一下】【点赞】<br>  Author：伊洛Yiluo<br>  愿你享受每一天，Just Enjoy !</p></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWNjMzQwMWY0YzkxNTU1YjUucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Zero to Hero" scheme="https://yiluotalk.com/tags/Zero-to-Hero/"/>
    
  </entry>
  
  <entry>
    <title>超级无敌好用的投屏AirServer</title>
    <link href="https://yiluotalk.com/2019/12/28/%E8%B6%85%E7%BA%A7%E6%97%A0%E6%95%8C%E5%A5%BD%E7%94%A8%E7%9A%84%E6%8A%95%E5%B1%8FAirServer/"/>
    <id>https://yiluotalk.com/2019/12/28/%E8%B6%85%E7%BA%A7%E6%97%A0%E6%95%8C%E5%A5%BD%E7%94%A8%E7%9A%84%E6%8A%95%E5%B1%8FAirServer/</id>
    <published>2019-12-28T02:16:12.000Z</published>
    <updated>2019-12-28T02:17:18.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTc5NDJhMzhiZjIwNjRhODUucG5n?x-oss-process=image/format,png" alt=""></p><ul><li>最近开会打算把手机投屏到自己的<code>Mac</code>上演示用，于是就打算用下听了很久好用但是一值没有使用的<code>AirServer</code></li><li>十分简单的操作就可以完美的投屏到<code>Mac</code>电脑，而且不用像<code>Mac</code>自带的<code>QuickTime</code>用线连接手机</li><li>画外音：自动化测试中有个好用的开源项目，<code>Airtest Project</code>，其实不仅可以在电脑显示手机屏幕，而且还可以对手机进行操作，由于本篇内容是讲投屏<code>AirServer</code>，这里不在赘诉，想了解自动化工具的小伙伴可以自行谷歌或百度<code>Airtest Project</code><blockquote><p>本文首发于伊洛的个人博客：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyiluotalk.com" target="_blank" rel="noopener">https://yiluotalk.com</a>，欢迎关注并查看更多内容！！！</p></blockquote></li></ul><h5 id="1-安装-AirServer"><a href="#1-安装-AirServer" class="headerlink" title="1. 安装 AirServer"></a>1. 安装 AirServer</h5><ul><li><p>打开官网，然后<code>download</code><br><a href="https://www.airserver.com/" target="_blank" rel="noopener">https://www.airserver.com/</a><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWIyYzVkNTdjMmNmMDYyODQucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="2-Mac电脑将程序拖动到-App"><a href="#2-Mac电脑将程序拖动到-App" class="headerlink" title="2. Mac电脑将程序拖动到 App"></a>2. <code>Mac</code>电脑将程序拖动到 <code>App</code></h5></li><li><p>官网下载的是试用的版本，如果激活的话可以购买正版</p></li><li><p>富裕的小伙伴还是尽量支持正版，不太方便的小伙伴可以考虑万能的谷歌或百度寻求新大陆</p><h5 id="3-启动Air-Server"><a href="#3-启动Air-Server" class="headerlink" title="3. 启动Air Server"></a>3. 启动Air Server</h5><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTIzYmQ5MGI5NDRlNGJhMGIucG5n?x-oss-process=image/format,png" alt="启动成功"></p><h5 id="3-配置投屏连接权限"><a href="#3-配置投屏连接权限" class="headerlink" title="3. 配置投屏连接权限"></a>3. 配置投屏连接权限</h5></li><li><p>同一网络下默认是可以直接投屏到服务上的，所以为了安全起见还是设置以下投屏的权限<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWMxYWRkZjljMzAzZWFkYWQucG5n?x-oss-process=image/format,png" alt="设置"></p></li><li><p>四种方式分别是：没有密码，固定密码，屏幕显示code, 询问</p></li><li><p>这里伊洛选择了请求投屏的时候，屏幕显示<code>code</code></p><h5 id="4-手机端下拉（iPhone）选择屏幕镜像，然后选择你的Mac设备"><a href="#4-手机端下拉（iPhone）选择屏幕镜像，然后选择你的Mac设备" class="headerlink" title="4. 手机端下拉（iPhone）选择屏幕镜像，然后选择你的Mac设备"></a>4. 手机端下拉（<code>iPhone</code>）选择屏幕镜像，然后选择你的Mac设备</h5></li><li><p>这样屏幕上就会显示<code>code</code><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWVmMTZjMTYwNDljMjIzY2EucG5n?x-oss-process=image/format,png" alt="屏幕上显示code"></p></li><li><p>手机端输入屏幕上的<code>code</code><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWY4YmY2OWRkMWZjZjYzMWYucG5n?x-oss-process=image/format,png" alt="成功投屏到Mac"><br><img src="https://img-blog.csdnimg.cn/2019122810121958.jpeg" alt="在这里插入图片描述"></p><h5 id="5-横屏可以看视频或玩游戏都行，可以放大。声音也可以配置-游戏画面还是会有延迟的，看视频效果还不错-（图片来自爱奇艺截图）"><a href="#5-横屏可以看视频或玩游戏都行，可以放大。声音也可以配置-游戏画面还是会有延迟的，看视频效果还不错-（图片来自爱奇艺截图）" class="headerlink" title="5. 横屏可以看视频或玩游戏都行，可以放大。声音也可以配置(游戏画面还是会有延迟的，看视频效果还不错)（图片来自爱奇艺截图）"></a>5. 横屏可以看视频或玩游戏都行，可以放大。声音也可以配置(游戏画面还是会有延迟的，看视频效果还不错)（图片来自爱奇艺截图）</h5><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTc4YzE3ZjA5MGEzZDBmYTYucG5n?x-oss-process=image/format,png" alt="截图来自爱奇艺"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTQ1OWMyMGExYjBhYTQxMjAucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWI5ODM4YjIzMTBhMDljZTgucG5n?x-oss-process=image/format,png" alt=""></p></li></ul><blockquote><p>欢迎下方【戳一下】【点赞】<br>  Author：伊洛Yiluo<br>  愿你享受每一天，Just Enjoy !</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="好用软件" scheme="https://yiluotalk.com/categories/%E5%A5%BD%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="好用软件" scheme="https://yiluotalk.com/tags/%E5%A5%BD%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>你的Python程序需要进度条</title>
    <link href="https://yiluotalk.com/2019/12/27/%E4%BD%A0%E7%9A%84Python%E7%A8%8B%E5%BA%8F%E9%9C%80%E8%A6%81%E8%BF%9B%E5%BA%A6%E6%9D%A1/"/>
    <id>https://yiluotalk.com/2019/12/27/%E4%BD%A0%E7%9A%84Python%E7%A8%8B%E5%BA%8F%E9%9C%80%E8%A6%81%E8%BF%9B%E5%BA%A6%E6%9D%A1/</id>
    <published>2019-12-27T07:27:45.000Z</published>
    <updated>2019-12-27T07:09:49.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTEyNTUzNjgzMWNlMjkwZmEucG5n?x-oss-process=image/format,png" alt=""></p><ul><li>生活中很多事情都会有反馈机制，比如考试完，成绩就是对这段时间学习效果的反馈；玩游戏经验值就是对你在游戏中投入精力的反馈等等。那么对于程序来说也需要反馈，比如安装一个软件，如果没有进度条，那么你一定会很抓狂。因为你根本无法确认程序是否在正常工作，还是任务已经被已系统挂起。那么本文就简单的介绍几种<code>python</code>常用到的反馈进度条方式（包括<code>GUI</code>进度条）<blockquote><p>本文首发于伊洛的个人博客：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyiluotalk.com" target="_blank" rel="noopener">https://yiluotalk.com</a>，欢迎关注并查看更多内容！！！</p></blockquote></li></ul><h5 id="1-使用-Progress"><a href="#1-使用-Progress" class="headerlink" title="1. 使用 Progress"></a>1. 使用 Progress</h5><ul><li>安装<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(yiluo) ➜  ~ pip install progress</span><br><span class="line">Collecting progress</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">38</span>/ef/<span class="number">2e887</span>b3d2b248916fc2121889ce68af8a16aaddbe82f9ae6533c24ff0d2b/progress<span class="number">-1.5</span>.tar.gz</span><br><span class="line">Installing collected packages: progress</span><br><span class="line">    Running setup.py install <span class="keyword">for</span> progress ... done</span><br><span class="line">Successfully installed progress<span class="number">-1.5</span></span><br></pre></td></tr></table></figure></li><li>创建一个脚本，写入以下代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo </span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> progress.bar <span class="keyword">import</span> IncrementalBar</span><br><span class="line"></span><br><span class="line">bar_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">bar = IncrementalBar(<span class="string">'progress bar'</span>, max=len(bar_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> bar_list:</span><br><span class="line">        bar.next()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    bar.finish()</span><br></pre></td></tr></table></figure></li><li>命令行运行<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(yiluo) ➜  AllDemo python demo.py</span><br><span class="line">progress bar |████████████                    | <span class="number">3</span>/<span class="number">8</span></span><br></pre></td></tr></table></figure><h5 id="2-使用-Tqdm"><a href="#2-使用-Tqdm" class="headerlink" title="2. 使用 Tqdm"></a>2. 使用 Tqdm</h5></li><li>安装<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pip install tqdm</span><br><span class="line">Collecting tqdm</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">8</span>c/c3/d049cf3fb31094ee045ec1ee29fffac218c91e82c8838c49ab4c3e52627b/tqdm<span class="number">-4.41</span><span class="number">.0</span>-py2.py3-none-any.whl (<span class="number">56</span>kB)</span><br><span class="line">     |████████████████████████████████| <span class="number">61</span>kB <span class="number">239</span>kB/s</span><br><span class="line">Installing collected packages: tqdm</span><br><span class="line">Successfully installed tqdm<span class="number">-4.41</span><span class="number">.0</span></span><br></pre></td></tr></table></figure></li><li>写入以下代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line">_bar = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> tqdm(_bar):</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li><li>命令行运行<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(yiluo) ➜  AllDemo python demo.py</span><br><span class="line"> <span class="number">62</span>%|█████████████████████████████████▊                    | <span class="number">5</span>/<span class="number">8</span></span><br></pre></td></tr></table></figure><h5 id="3-使用-Alive-Progress"><a href="#3-使用-Alive-Progress" class="headerlink" title="3. 使用 Alive Progress"></a>3. 使用 Alive Progress</h5></li><li>也是很常用的，和之前例子相差不大，有兴趣的可以看以下具体的使用文档<br><a href="https://github.com/rsalmei/alive-progress" target="_blank" rel="noopener">Alive Progress 传送门</a><h5 id="4-使用-Pysimplegui（GUI）"><a href="#4-使用-Pysimplegui（GUI）" class="headerlink" title="4. 使用 Pysimplegui（GUI）"></a>4. 使用 Pysimplegui（GUI）</h5></li><li>安装<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(yiluo) ➜  ~ pip install pysimplegui</span><br><span class="line">Collecting pysimplegui</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">22</span>/a8/ec06b5ce8997411c542dc0f65848a89b6f852b1b9c0fde8ace89aec6703e/PySimpleGUI<span class="number">-4.14</span><span class="number">.1</span>-py3-none-any.whl (<span class="number">288</span>kB)</span><br><span class="line">     |████████████████████████████████| <span class="number">296</span>kB <span class="number">286</span>kB/s</span><br><span class="line">Installing collected packages: pysimplegui</span><br><span class="line">Successfully installed pysimplegui<span class="number">-4.14</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> PySimpleGUI <span class="keyword">as</span> sg</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">bar_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, item <span class="keyword">in</span> enumerate(bar_list):</span><br><span class="line">    sg.one_line_progress_meter(<span class="string">'我是进度条!'</span>, i+<span class="number">1</span>, len(bar_list), <span class="string">'key'</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li><li>来看看GUI的效果<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTZlMGZjYjIzNjMzYTVjNzUucG5n?x-oss-process=image/format,png" alt=""><br><img src="https://img-blog.csdnimg.cn/20191227150511558.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLThmMDY1OGQ1NzhjZmFhMmUucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"><blockquote><p>欢迎下方【戳一下】【点赞】<br>Author：伊洛Yiluo<br>愿你享受每一天，Just Enjoy !</p></blockquote></li></ul></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Zero to Hero" scheme="https://yiluotalk.com/tags/Zero-to-Hero/"/>
    
  </entry>
  
  <entry>
    <title>老司机都知道的Python语法小技巧 (二)</title>
    <link href="https://yiluotalk.com/2019/12/26/%E8%80%81%E5%8F%B8%E6%9C%BA%E9%83%BD%E7%9F%A5%E9%81%93%E7%9A%84Python%E8%AF%AD%E6%B3%95%E5%B0%8F%E6%8A%80%E5%B7%A7%20(%E4%BA%8C)/"/>
    <id>https://yiluotalk.com/2019/12/26/%E8%80%81%E5%8F%B8%E6%9C%BA%E9%83%BD%E7%9F%A5%E9%81%93%E7%9A%84Python%E8%AF%AD%E6%B3%95%E5%B0%8F%E6%8A%80%E5%B7%A7%20(%E4%BA%8C)/</id>
    <published>2019-12-26T06:52:59.000Z</published>
    <updated>2019-12-26T06:52:29.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTM1MGEzN2IwZWY5NjU2N2QucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="写在前面—Python的优势在于"><a href="#写在前面—Python的优势在于" class="headerlink" title="写在前面—Python的优势在于"></a>写在前面—Python的优势在于</h5><p>1.与主要平台和操作系统兼容<br>2.许多开源框架和工具<br>3.可读且可维护的代码<br>4.强大的标准库<br>5.标准测试驱动的开发</p><blockquote><p>本文首发于伊洛的个人博客：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyiluotalk.com" target="_blank" rel="noopener">https://yiluotalk.com</a>，欢迎关注并查看更多内容！！！</p></blockquote><ul><li>话不多说了，本文是第二部分，将讲简单的列出几条日常工作中使用<code>Python</code>可能会用到的语法小技巧，希望会对你的工作有所帮助 just enjoy！<br>第一部分是：<a href="https://www.jianshu.com/p/ae0943ccf0ba" target="_blank" rel="noopener">老司机都知道的Python语法小技巧 (一)</a><h5 id="14-列表中元素出现的个数"><a href="#14-列表中元素出现的个数" class="headerlink" title="14.列表中元素出现的个数"></a>14.列表中元素出现的个数</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>count = Counter(list)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>count</span><br><span class="line">Counter(&#123;<span class="number">1</span>: <span class="number">2</span>, <span class="number">2</span>: <span class="number">2</span>, <span class="number">3</span>: <span class="number">2</span>, <span class="number">4</span>: <span class="number">2</span>, <span class="number">5</span>: <span class="number">2</span>, <span class="number">6</span>: <span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><h5 id="15-列表中查找出现最多的元素"><a href="#15-列表中查找出现最多的元素" class="headerlink" title="15.列表中查找出现最多的元素"></a>15.列表中查找出现最多的元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">most_frequement</span><span class="params">(list)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> max(set(list), key = list.count)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>number = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>most_frequement(number)</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h5 id="16-将角度从度转换为弧度"><a href="#16-将角度从度转换为弧度" class="headerlink" title="16. 将角度从度转换为弧度"></a>16. 将角度从度转换为弧度</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">degrees_to_radians</span><span class="params">(deg)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> (deg * math.pi) / <span class="number">180</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>degrees_to_radians(<span class="number">90</span>)</span><br><span class="line"><span class="number">1.5707963267948966</span></span><br></pre></td></tr></table></figure><h5 id="17-计算执行一段代码所花费的时间-非装饰器"><a href="#17-计算执行一段代码所花费的时间-非装饰器" class="headerlink" title="17. 计算执行一段代码所花费的时间(非装饰器)"></a>17. 计算执行一段代码所花费的时间(非装饰器)</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">start_time = time.time()</span><br><span class="line">a, b = <span class="number">10</span>, <span class="number">20</span></span><br><span class="line">c = a + b</span><br><span class="line">end_time = time.time()</span><br><span class="line">time_taken = (end_time- start_time)*(<span class="number">10</span>**<span class="number">6</span>)</span><br><span class="line">print(<span class="string">'耗时'</span>, time_taken)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">output</span><br><span class="line">耗时 <span class="number">2.1457672119140625</span></span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><h5 id="18-字符串去重"><a href="#18-字符串去重" class="headerlink" title="18. 字符串去重"></a>18. 字符串去重</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string = <span class="string">"aabbccddeeffgg"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>unique = set(string)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>unique</span><br><span class="line">&#123;<span class="string">'a'</span>, <span class="string">'f'</span>, <span class="string">'b'</span>, <span class="string">'g'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="string">'d'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_string = <span class="string">''</span>.join(unique)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_string</span><br><span class="line"><span class="string">'afbgced'</span></span><br></pre></td></tr></table></figure><h5 id="19-使用lambda表达式"><a href="#19-使用lambda表达式" class="headerlink" title="19. 使用lambda表达式"></a>19. 使用lambda表达式</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="keyword">lambda</span> a, b, c :a + b + c</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(x(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h5 id="20-使用-filter"><a href="#20-使用-filter" class="headerlink" title="20. 使用 filter"></a>20. 使用 filter</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr = list(filter(<span class="keyword">lambda</span> x : x%<span class="number">2</span> == <span class="number">0</span>, arr))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr)</span><br><span class="line">[<span class="number">2</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><h5 id="21-列表"><a href="#21-列表" class="headerlink" title="21. 列表"></a>21. 列表</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>number = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares = [number**<span class="number">2</span> <span class="keyword">for</span> number <span class="keyword">in</span> number]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(squares)</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><h5 id="22-切片"><a href="#22-切片" class="headerlink" title="22. 切片"></a>22. 切片</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">rotate</span><span class="params">(arr, d)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> arr[d:] + arr[:d]</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr = rotate(arr, <span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(arr)</span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">2</span>]</span><br></pre></td></tr></table></figure><h5 id="23-链式函数"><a href="#23-链式函数" class="headerlink" title="23. 链式函数"></a>23. 链式函数</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">subtract</span><span class="params">(a, b)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> a - b</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a, b)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> a + b</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">subtract</span><span class="params">(a, b)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> a - b</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a, b = <span class="number">5</span>, <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print((subtract <span class="keyword">if</span> a &gt; b <span class="keyword">else</span> add)(a, b))</span><br><span class="line"><span class="number">15</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a, b = <span class="number">10</span>, <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print((subtract <span class="keyword">if</span> a &gt; b <span class="keyword">else</span> add)(a, b))</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20191226144707930.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWNkM2Y4MjBmYmY3OTYyNDAucG5n?x-oss-process=image/format,png" alt=""></li></ul><blockquote><p>欢迎下方【戳一下】【点赞】<br>  Author：伊洛Yiluo<br>  愿你享受每一天，Just Enjoy !</p></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLThlMGMyNjNkYjU3MDAzNDUucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Zero to Hero" scheme="https://yiluotalk.com/tags/Zero-to-Hero/"/>
    
  </entry>
  
  <entry>
    <title>老司机都知道的Python语法小技巧 (一)</title>
    <link href="https://yiluotalk.com/2019/12/26/%E8%80%81%E5%8F%B8%E6%9C%BA%E9%83%BD%E7%9F%A5%E9%81%93%E7%9A%84Python%E8%AF%AD%E6%B3%95%E5%B0%8F%E6%8A%80%E5%B7%A7%20(%E4%B8%80)/"/>
    <id>https://yiluotalk.com/2019/12/26/%E8%80%81%E5%8F%B8%E6%9C%BA%E9%83%BD%E7%9F%A5%E9%81%93%E7%9A%84Python%E8%AF%AD%E6%B3%95%E5%B0%8F%E6%8A%80%E5%B7%A7%20(%E4%B8%80)/</id>
    <published>2019-12-26T03:34:59.000Z</published>
    <updated>2019-12-26T03:37:10.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTFiNmMwMjczMzhlY2JmMTkucG5n?x-oss-process=image/format,png" alt=""></p><ul><li>话不多说，本文是第一部分，将讲简单的列出几条日常工作中使用<code>Python</code>可能会用到的语法小技巧，希望会对你的工作有所帮助 just enjoy！<blockquote><p>本文首发于伊洛的个人博客：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyiluotalk.com" target="_blank" rel="noopener">https://yiluotalk.com</a>，欢迎关注并查看更多内容！！！</p></blockquote><h5 id="1-两个变量直接做交换"><a href="#1-两个变量直接做交换" class="headerlink" title="1. 两个变量直接做交换"></a>1. 两个变量直接做交换</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num1 = <span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num2 = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num1, num2 = num2, num1</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num1</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num2</span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h5 id="2-检查数字是否为偶数"><a href="#2-检查数字是否为偶数" class="headerlink" title="2. 检查数字是否为偶数"></a>2. 检查数字是否为偶数</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">is_even</span><span class="params">(num)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> num %<span class="number">2</span> == <span class="number">0</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>is_even(<span class="number">100</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>is_even(<span class="number">99</span>)</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><h5 id="3-字符串拆为列表"><a href="#3-字符串拆为列表" class="headerlink" title="3. 字符串拆为列表"></a>3. 字符串拆为列表</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split_lines</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> s.split(<span class="string">'/n'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">talk = <span class="string">'The Zen of Python, by Tim Peters Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex.'</span></span><br><span class="line"></span><br><span class="line">print(split_lines(talk))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">output</span><br><span class="line">[<span class="string">'The Zen of Python, by Tim Peters Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex.'</span>]</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><h5 id="4-查找对象内存"><a href="#4-查找对象内存" class="headerlink" title="4. 查找对象内存"></a>4. 查找对象内存</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.getsizeof(<span class="number">5</span>)</span><br><span class="line"><span class="number">28</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sys.getsizeof(<span class="string">"Python"</span>))</span><br><span class="line"><span class="number">55</span></span><br></pre></td></tr></table></figure><h5 id="5-反转字符串"><a href="#5-反转字符串" class="headerlink" title="5. 反转字符串"></a>5. 反转字符串</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string = <span class="string">"python"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reversed_string = string[::<span class="number">-1</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reversed_string</span><br><span class="line"><span class="string">'nohtyp'</span></span><br></pre></td></tr></table></figure><h5 id="6-打印一个字符串n次（不用循环）"><a href="#6-打印一个字符串n次（不用循环）" class="headerlink" title="6. 打印一个字符串n次（不用循环）"></a>6. 打印一个字符串n次（不用循环）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">repeat</span><span class="params">(string, n)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> (string * n)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>repeat(<span class="string">'hello'</span>, <span class="number">8</span>)</span><br><span class="line"><span class="string">'hellohellohellohellohellohellohellohello'</span></span><br></pre></td></tr></table></figure><h5 id="7-判断字符串是否回文"><a href="#7-判断字符串是否回文" class="headerlink" title="7.判断字符串是否回文"></a>7.判断字符串是否回文</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">palindrome</span><span class="params">(string)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> string == string[::<span class="number">-1</span>]</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>palindrome(<span class="string">'python'</span>)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>palindrome(<span class="string">'abba'</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h5 id="8-将字符串列表合并为一个字符串"><a href="#8-将字符串列表合并为一个字符串" class="headerlink" title="8. 将字符串列表合并为一个字符串"></a>8. 将字符串列表合并为一个字符串</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>strings = [<span class="string">'yiluo'</span>, <span class="string">'hello'</span>, <span class="string">'18'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">','</span>.join(strings))</span><br><span class="line">yiluo,hello,<span class="number">18</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = (<span class="string">','</span>.join(strings))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="string">'yiluo,hello,18'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(a)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt;</span></span><br></pre></td></tr></table></figure><h6 id="9-查找列表的第一个元素"><a href="#9-查找列表的第一个元素" class="headerlink" title="9. 查找列表的第一个元素"></a>9. 查找列表的第一个元素</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">head</span><span class="params">(list)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> list[<span class="number">0</span>]</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>head([<span class="string">'yiluo'</span>,<span class="string">'tom'</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line"><span class="string">'yiluo'</span></span><br></pre></td></tr></table></figure><h5 id="10-合并两个列表中共有的元素"><a href="#10-合并两个列表中共有的元素" class="headerlink" title="10.合并两个列表中共有的元素"></a>10.合并两个列表中共有的元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">union</span><span class="params">(a, b)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> list(set(a + b))</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>union([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>], [<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>])</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>union([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>], [<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>])</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br></pre></td></tr></table></figure><h5 id="11-给定列表中所有唯一元素"><a href="#11-给定列表中所有唯一元素" class="headerlink" title="11. 给定列表中所有唯一元素"></a>11. 给定列表中所有唯一元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">unique_element</span><span class="params">(numbers)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> list(set(numbers))</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>unique_element([<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>])</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><h5 id="12-多参数平均值"><a href="#12-多参数平均值" class="headerlink" title="12. 多参数平均值"></a>12. 多参数平均值</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">average</span><span class="params">(*args)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> sum(args, <span class="number">0.0</span>) / len(args)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>average(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line"><span class="number">3.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>average(<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>)</span><br><span class="line"><span class="number">5.0</span></span><br></pre></td></tr></table></figure><h5 id="13-检查列表元素是否唯一"><a href="#13-检查列表元素是否唯一" class="headerlink" title="13. 检查列表元素是否唯一"></a>13. 检查列表元素是否唯一</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://yiluotalk.com</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">unique</span><span class="params">(list)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> len(list)==len(set(list)):</span><br><span class="line"><span class="meta">... </span>        print(<span class="string">'都是唯一的'</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">else</span>:</span><br><span class="line"><span class="meta">... </span>        print(<span class="string">'很不幸，有重复的'</span>)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>unique([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">都是唯一的</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>unique([<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>])</span><br><span class="line">很不幸，有重复的</span><br></pre></td></tr></table></figure><h5 id="待续-gt-gt-gt"><a href="#待续-gt-gt-gt" class="headerlink" title="待续&gt;&gt;&gt;"></a>待续&gt;&gt;&gt;</h5><img src="https://img-blog.csdnimg.cn/20191226113419977.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTAyNDI0MDQwOGRhOGYxNTAucG5n?x-oss-process=image/format,png" alt=""><blockquote><p>欢迎下方【戳一下】【点赞】<br>Author：伊洛Yiluo<br>愿你享受每一天，Just Enjoy !</p></blockquote></li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTgxYTk0MDFjZjg0ZGEwNTkucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Zero to Hero" scheme="https://yiluotalk.com/tags/Zero-to-Hero/"/>
    
  </entry>
  
  <entry>
    <title>Python 自动化测试实战基础 Zero to Hero 测试报告Allure(三)</title>
    <link href="https://yiluotalk.com/2019/12/24/Python%20%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8AAllure(%E4%B8%89)/"/>
    <id>https://yiluotalk.com/2019/12/24/Python%20%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8AAllure(%E4%B8%89)/</id>
    <published>2019-12-24T07:38:59.000Z</published>
    <updated>2019-12-24T07:38:23.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWRlNDkwZDIzM2RjYjI3M2UucG5n?x-oss-process=image/format,png" alt=""></p><ul><li>自动化测试执行完毕后，需要测试报告来层现测试结果。有个‘像样’的报告的好处是毋庸置疑的，今天就来简单的讲述一下自动化测试后经常使用到的测试报告<code>Allure</code><blockquote><p>本文首发于伊洛的个人博客：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyiluotalk.com" target="_blank" rel="noopener">https://yiluotalk.com</a>，欢迎关注并查看更多内容！！！</p></blockquote><h5 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h5></li><li><code>Mac</code>下安装直接<code>homebrew</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#伊洛Yiluo </span></span><br><span class="line"><span class="comment">#https://www.yiluotalk.com</span></span><br><span class="line"></span><br><span class="line">brew install allure</span><br></pre></td></tr></table></figure></li><li>检查一下安装的结果<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#伊洛Yiluo </span></span><br><span class="line"><span class="comment">#https://www.yiluotalk.com</span></span><br><span class="line">➜  ~ allure --version</span><br><span class="line"><span class="number">2.13</span><span class="number">.1</span></span><br></pre></td></tr></table></figure></li><li>以上说明已经成功安装<h5 id="2-安装allure-pytest"><a href="#2-安装allure-pytest" class="headerlink" title="2. 安装allure-pytest"></a>2. 安装allure-pytest</h5></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#伊洛Yiluo </span></span><br><span class="line"><span class="comment">#https://www.yiluotalk.com</span></span><br><span class="line">pip install allure-pytest</span><br></pre></td></tr></table></figure><h5 id="3-举个栗子"><a href="#3-举个栗子" class="headerlink" title="3. 举个栗子"></a>3. 举个栗子</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://www.yiluotalk.com</span></span><br><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_success</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_failure</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_skip</span><span class="params">()</span>:</span></span><br><span class="line">    pytest.skip(<span class="string">'跳过测试'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_broken</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">'出错了'</span>)</span><br></pre></td></tr></table></figure><ul><li>生成报告分2个步骤（后面是生成报告的路径）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://www.yiluotalk.com</span></span><br><span class="line">pytest --alluredir=/tmp/my_allure_results</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://www.yiluotalk.com</span></span><br><span class="line">allure serve /tmp/my_allure_results</span><br></pre></td></tr></table></figure></li><li>实际尝试下查看结果<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://www.yiluotalk.com</span></span><br><span class="line">E       <span class="keyword">assert</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">test_sample.py:<span class="number">13</span>: AssertionError</span><br><span class="line">___________________________________ test_broken ___________________________________</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_broken</span><span class="params">()</span>:</span></span><br><span class="line">&gt;       <span class="keyword">raise</span> Exception(<span class="string">'出错了'</span>)</span><br><span class="line">E       Exception: 出错了</span><br><span class="line"></span><br><span class="line">test_sample.py:<span class="number">21</span>: Exception</span><br><span class="line">===================== <span class="number">2</span> failed, <span class="number">1</span> passed, <span class="number">1</span> skipped <span class="keyword">in</span> <span class="number">0.08</span>s ======================</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># https://www.yiluotalk.com</span></span><br><span class="line">Generating report to temp directory...</span><br><span class="line">Report successfully generated to /var/folders/<span class="number">76</span>/fkp3njt56f97wsxgpy94mjh00000gn/T/<span class="number">1826909724101378741</span>/allure-report</span><br><span class="line">Starting web server...</span><br><span class="line"><span class="number">2019</span><span class="number">-12</span><span class="number">-24</span> <span class="number">14</span>:<span class="number">34</span>:<span class="number">54.474</span>:INFO::main: Logging initialized @<span class="number">13022</span>ms to org.eclipse.jetty.util.log.StdErrLog</span><br><span class="line">Server started at &lt;&gt;. Press &lt;Ctrl+C&gt; to exit</span><br></pre></td></tr></table></figure><h5 id="4-查看测试报告"><a href="#4-查看测试报告" class="headerlink" title="4. 查看测试报告"></a>4. 查看测试报告</h5></li><li>执行完上面的命令后会自动打开默认的浏览器显示测试报告<br><img src="https://img-blog.csdnimg.cn/20191224145731408.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTc3YjkwNTAwYWY0MjI0YjMucG5n?x-oss-process=image/format,png" alt=""></li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWNmMDRjMzRhZWQwOThiOGUucG5n?x-oss-process=image/format,png" alt=""></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTI4NjU4YTJkNDAzYzAzYWYucG5n?x-oss-process=image/format,png" alt=""></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTlhOWNlZDA2ZTk5NzA3MWMucG5n?x-oss-process=image/format,png" alt=""></p><blockquote><p>欢迎下方【戳一下】【点赞】<br>Author：伊洛Yiluo<br>愿你享受每一天，Just Enjoy !</p></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTBiMTQ4MTMwYzRjMzFiOGYucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="自动化测试" scheme="https://yiluotalk.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="UI自动化测试" scheme="https://yiluotalk.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="接口自动化测试" scheme="https://yiluotalk.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="测试开发" scheme="https://yiluotalk.com/categories/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="测试开发" scheme="https://yiluotalk.com/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
      <category term="自动化测试" scheme="https://yiluotalk.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="UI自动化测试" scheme="https://yiluotalk.com/tags/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="接口自动化测试" scheme="https://yiluotalk.com/tags/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Python 自动化测试实战 Zero to Hero 基础 读取ini配置文件(二)</title>
    <link href="https://yiluotalk.com/2019/12/23/Python%20%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%20Zero%20to%20Hero%20%E5%9F%BA%E7%A1%80%20%E8%AF%BB%E5%8F%96ini%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6(%E4%BA%8C)/"/>
    <id>https://yiluotalk.com/2019/12/23/Python%20%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%20Zero%20to%20Hero%20%E5%9F%BA%E7%A1%80%20%E8%AF%BB%E5%8F%96ini%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6(%E4%BA%8C)/</id>
    <published>2019-12-23T06:00:59.000Z</published>
    <updated>2019-12-23T06:03:03.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTgxMjQyMDljMDNjMTE3NmMucG5n?x-oss-process=image/format,png" alt=""></p><p>无论做自动化测试还是测试开发或者其它工作中，肯定需要做一些配置并在程序中读取这些预设置好的配置内容，那么最常用的无疑是ini配置文件了</p><blockquote><p>本文首发于伊洛的个人博客：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyiluotalk.com" target="_blank" rel="noopener">https://yiluotalk.com</a>，欢迎关注并查看更多内容！！！</p></blockquote><h5 id="1-ini配置文件"><a href="#1-ini配置文件" class="headerlink" title="1. ini配置文件"></a>1. ini配置文件</h5><ul><li>ini配置文件内容由，节，键（或者称为选项），值三部分构成<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[section_1]</span><br><span class="line">option_1 = value_1</span><br><span class="line">option_2 = value_2</span><br><span class="line">[section_2]</span><br></pre></td></tr></table></figure></li><li>大小写敏感</li><li>另外有一个特殊的节（  <code>section</code>），就是默认节（<code>DEFAULT</code>）<h5 id="2-python读取配置文件"><a href="#2-python读取配置文件" class="headerlink" title="2. python读取配置文件"></a>2. <code>python</code>读取配置文件</h5></li><li>首先我们写一个配置文件并预设内容<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line"><span class="comment"># 自动化测试配置文件</span></span><br><span class="line"></span><br><span class="line">[test]</span><br><span class="line"><span class="comment"># 测试人</span></span><br><span class="line">tester = yiluo</span><br><span class="line"><span class="comment"># 测试环境</span></span><br><span class="line">environment = test</span><br><span class="line"><span class="comment"># 测试版本</span></span><br><span class="line">versionCode = <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line"></span><br><span class="line">host = https://test.yiluotalk.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[release]</span><br><span class="line">tester = luoyi</span><br><span class="line">environment = release</span><br><span class="line">versionCode = <span class="number">2.0</span><span class="number">.0</span></span><br><span class="line"><span class="comment"># 正式域名（伊洛的个人博客）</span></span><br><span class="line">host = https://yiluotalk.com</span><br></pre></td></tr></table></figure></li><li>使用<code>ConfigParser</code>模块,并<code>实例化</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">from</span> configparser <span class="keyword">import</span> ConfigParser</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: config = ConfigParser()</span><br></pre></td></tr></table></figure></li><li>返回所有的节点<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">3</span>]: config.read(<span class="string">'test.ini'</span>)</span><br><span class="line">Out[<span class="number">3</span>]: [<span class="string">'test.ini'</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">10</span>]: config.sections()</span><br><span class="line">Out[<span class="number">10</span>]: [<span class="string">'test'</span>, <span class="string">'release'</span>]</span><br></pre></td></tr></table></figure></li><li>查询<code>section</code>（节点）是否存在<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">7</span>]: config.has_section(<span class="string">'test'</span>)</span><br><span class="line">Out[<span class="number">7</span>]: <span class="literal">True</span></span><br><span class="line">In [<span class="number">12</span>]: config.has_section(<span class="string">'demo'</span>)</span><br><span class="line">Out[<span class="number">12</span>]: <span class="literal">False</span></span><br></pre></td></tr></table></figure></li><li>返回指定节点（<code>section</code>）里面的所有选项<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">14</span>]: config.options(<span class="string">'test'</span>)</span><br><span class="line">Out[<span class="number">14</span>]: [<span class="string">'tester'</span>, <span class="string">'environment'</span>, <span class="string">'versioncode'</span>, <span class="string">'host'</span>]</span><br></pre></td></tr></table></figure></li><li>获取<code>伊洛</code>正式环境<code>个人博客</code>的地址<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [16]: config.get(&#39;release&#39;, &#39;host&#39;)</span><br><span class="line">Out[16]: &#39;https:&#x2F;&#x2F;yiluotalk.com&#39;</span><br></pre></td></tr></table></figure></li><li>其余可能常用到的还有<code>config.set／config.write／config.add_section</code><br><img src="https://img-blog.csdnimg.cn/20191223135657627.jpeg" alt="在这里插入图片描述"></li></ul><blockquote><p>欢迎下方【戳一下】【点赞】<br>Author：伊洛Yiluo<br>愿你享受每一天，Just Enjoy !</p></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTQzYWFiMjQ1OTQzZDI1ODcucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="自动化测试" scheme="https://yiluotalk.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="UI自动化测试" scheme="https://yiluotalk.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="接口自动化测试" scheme="https://yiluotalk.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="测试开发" scheme="https://yiluotalk.com/categories/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="测试开发" scheme="https://yiluotalk.com/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
      <category term="自动化测试" scheme="https://yiluotalk.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="UI自动化测试" scheme="https://yiluotalk.com/tags/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="接口自动化测试" scheme="https://yiluotalk.com/tags/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Mac 电脑解压.rar文件</title>
    <link href="https://yiluotalk.com/2019/12/20/Mac%20%E7%94%B5%E8%84%91%E8%A7%A3%E5%8E%8B.rar%E6%96%87%E4%BB%B6/"/>
    <id>https://yiluotalk.com/2019/12/20/Mac%20%E7%94%B5%E8%84%91%E8%A7%A3%E5%8E%8B.rar%E6%96%87%E4%BB%B6/</id>
    <published>2019-12-20T10:13:59.000Z</published>
    <updated>2019-12-20T10:13:58.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTExYTQyY2YzZWRiMjFiNjIucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="1-原由"><a href="#1-原由" class="headerlink" title="1. 原由"></a>1. 原由</h5><ul><li>最近写了一些文章都是在简书上面，打算转到自己的个人博客上，由于个人博客是<code>Hexo</code>支持，需要<code>Markdown</code>格式。于是就打算把简书的文章导出来，发现可以完美导出<code>Markdown</code>格式，但是貌似只能批量的导，不能单独导出<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWJkY2E3ZWIyYTk3YzQyZGEucG5n?x-oss-process=image/format,png" alt=""></li><li>于是乎就下载全部文章，但发现下载后是一个<code>.rar</code>文件</li><li><code>Mac</code>并不像<code>windows</code>,得选择一个好的解压工具为好，于是乎选择了<code>unrar</code>来解决这个问题<h5 id="2-so-easy的解压方式"><a href="#2-so-easy的解压方式" class="headerlink" title="2. so easy的解压方式"></a>2. so easy的解压方式</h5></li><li>安装<code>unrar</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install unrar</span><br></pre></td></tr></table></figure></li><li>待<code>unrar</code>安装成功</li><li>进入的下载<code>.rar</code>的目录中</li><li>执行以下的命令（<code>Download</code>是笔者下载的目录）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  Downloads unrar x jianshu.rar</span><br><span class="line"></span><br><span class="line">UNRAR <span class="number">5.80</span> freeware      Copyright (c) <span class="number">1993</span><span class="number">-2019</span> Alexander Roshal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Extracting <span class="keyword">from</span> jianshu.rar</span><br></pre></td></tr></table></figure></li><li>执行命令后解压的文件与<code>.rar</code>文件在同一目录中</li></ul><p><img src="https://img-blog.csdnimg.cn/20191220181011348.jpeg" alt="在这里插入图片描述"></p><blockquote><p>欢迎下方【戳一下】【点赞】<br>Author：伊洛Yiluo<br>愿你享受每一天，Just Enjoy !</p></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTM0MWMzZWZmZGZhOTEwNzkucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="技术随笔" scheme="https://yiluotalk.com/categories/%E6%8A%80%E6%9C%AF%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://yiluotalk.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>软件测试网络基础 Zero to Hero -- OSI 与 TCP/IP 模型(二)</title>
    <link href="https://yiluotalk.com/2019/12/20/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20--%20OSI%20%E4%B8%8E%20TCP_IP%20%E6%A8%A1%E5%9E%8B(%E4%BA%8C)/"/>
    <id>https://yiluotalk.com/2019/12/20/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20--%20OSI%20%E4%B8%8E%20TCP_IP%20%E6%A8%A1%E5%9E%8B(%E4%BA%8C)/</id>
    <published>2019-12-20T05:27:59.000Z</published>
    <updated>2019-12-20T05:27:22.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWVkMDMzZTY2ZDQ3MmJmMWUucG5n?x-oss-process=image/format,png" alt=""></p><p><a href="https://www.jianshu.com/p/ef4ec8ae5fa4" target="_blank" rel="noopener">软件测试网络基础 Zero to Hero – OSI 与 TCP/IP 模型(一)</a></p><ul><li>接上文继续概念（内容是比较基础的概念，干货为主，适用初级测试工程师面试中可能会被问到的网络知识）<h5 id="1-物理层"><a href="#1-物理层" class="headerlink" title="1.物理层"></a>1.物理层</h5>物理层的作用：保证原始数据比特流的无误传输<br>任务：物理层定义电压，接口，线缆标准，传输距离。理层协议定义接口的四个基本功能特性:<blockquote><p>机械特性：说明了接口所用接线器的形状和尺寸、引线数目和排列等。<br>电气特性：说明在接口电缆的哪根线上出现的电压应为什么范围。<br>功能特性：说明某根线上出现的某一电平的电压表示何种意义。<br>规程特性：说明对不同功能的各种可能事件的出现顺序</p></blockquote></li><li>传输介质<br>传输媒体通常有：双绞线:UTP/STP，同轴电缆:RG58 A/U 细缆RG11粗缆，光纤，无线</li><li>双绞线分2种：</li></ul><p>1.屏蔽双绞线 STP<br>2.非屏蔽双绞线UTP(8根线两两相绞，成本低，有干扰)<br>注：100M只用1-2、3-6；1000M8根线都用。理论距离100米</p><ul><li>同轴电缆<br>同轴电缆由内导体铜制芯线（单股实心线或多股绞合线）、绝缘层、网状编织的外导体屏蔽层以及保护塑料外层组成</li></ul><p>1.基带同轴电缆一条电缆只用于一个信道，50Ω，用于数字传输<br>2.宽带同轴电缆   一条电缆同时传输不同频率的多路模拟信号，75 Ω，用于模拟传输，300—450MHz，100km，需要放大器</p><ul><li>光纤介质<blockquote><p>1.使用光波携带信息，不受电磁、电子干扰</p></blockquote></li></ul><p>2.速度快、衰减小，传输距离远<br>3.对外没有辐射，理论上无法窃听，安全性好<br>4.成本高，热熔接要求精密，不易民用</p><ul><li>光纤传送模式：MMF、SMF</li><li>无线<blockquote><p>1.使用电磁波或光波携带信息</p></blockquote></li></ul><p>2.无需物理连接，节省成本、安装时间<br>3.适用于短距离或不便布线的场合（高温、高毒……）<br>4.易受干扰、安全性差</p><ul><li>无线电</li><li>卫星通讯<h5 id="2-数据链路层与交换机"><a href="#2-数据链路层与交换机" class="headerlink" title="2.数据链路层与交换机"></a>2.数据链路层与交换机</h5></li><li>数据链路层功能<blockquote><p>数据链路的建立、维护与拆除<br>帧包装、帧传输、帧同步<br>物理地址定义<br>网络拓扑结构（以太网帧、令牌环帧）<br>差错控制（帧的差错恢复）、流量控制<br>采用透明传输的方法将帧中的数据和控制信息分开</p></blockquote></li><li>以太网<br>以太网(Ethernet)指的是由Xerox公司创建并由Xerox、Intel和DEC公司联合开发的基带局域网规范，施乐公司（Xerox）用“以太”命名，使用了CSMA/CD这种争用方式的网络就叫以太网。包括标准的以太网（10Mbit/s)、快速以太网（100Mbit/s）和10G（10Gbit/s）以太网。它们都符合IEEE802.3</li><li>CSMA/CD<br>CSMA/CD—带冲突检测的载波监听多路访问以太网采用CSMA/CD避免信号的冲突<br>口诀：<blockquote><p>先听后发<br>边听边发<br>冲突停止<br>延迟后发</p></blockquote></li><li>以太网的命名方法<br>N－信号－物理介质<br>N：以兆位为单位的数据速率，如10、100、1000<br>信号：基带还是宽带<br>物理介质：标识介质类型</li><li>交换机数据转发原理（后续介绍）<h5 id="3-虚拟局域网（VLAN）"><a href="#3-虚拟局域网（VLAN）" class="headerlink" title="3.虚拟局域网（VLAN）"></a>3.虚拟局域网（VLAN）</h5>VLAN：Virtual LAN（虚拟局域网）是物理设备上连接的不受物理位置限制的用户的一个逻辑组<br>VLAN作用：广播控制<br>安全性<br>带宽利用<br>VLAN的种类</li></ul><p>1.基于端口划分的静态VLAN<br>2.基于MAC地址划分的动态VLAN</p><h5 id="4-计算机网络协议"><a href="#4-计算机网络协议" class="headerlink" title="4.计算机网络协议"></a>4.计算机网络协议</h5><ul><li>基本概念和词汇<blockquote><p>子网 (subnet)<br>网络地址 (network address) 及分类<br>子网掩码 (subnet mask)<br>路由器 (router)<br>跳 (hop)</p></blockquote></li><li>IP地址<br>大家一定都很熟悉的概念了，IP地址的作用是：用来标识一个节点的网络地址</li><li>IP包头的格式（后续展开讲述）</li><li>IP地址的组成（后续展开讲述）</li><li>子网掩码的适用 （后续展开讲述）<h5 id="5-静态路由与配置（……待续）"><a href="#5-静态路由与配置（……待续）" class="headerlink" title="5.静态路由与配置（……待续）"></a>5.静态路由与配置（……待续）</h5><img src="https://img-blog.csdnimg.cn/20191219135714467.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWIxOTlmMzEyODZiMjc1MTMucG5n?x-oss-process=image/format,png" alt=""><blockquote><p>欢迎下方【戳一下】【点赞】<br>Author：伊洛Yiluo<br>愿您享受每一天，Just Enjoy !</p></blockquote></li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWMzMjg3ZGE5ODZkNDFhZTkucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="软件测试基础" scheme="https://yiluotalk.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="软件测试基础" scheme="https://yiluotalk.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
      <category term="功能业务测试" scheme="https://yiluotalk.com/tags/%E5%8A%9F%E8%83%BD%E4%B8%9A%E5%8A%A1%E6%B5%8B%E8%AF%95/"/>
    
      <category term="测试理论" scheme="https://yiluotalk.com/tags/%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>软件测试网络基础 Zero to Hero -- OSI 与 TCP/IP 模型(一)</title>
    <link href="https://yiluotalk.com/2019/12/20/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20--%20OSI%20%E4%B8%8E%20TCP_IP%20%E6%A8%A1%E5%9E%8B(%E4%B8%80)/"/>
    <id>https://yiluotalk.com/2019/12/20/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20--%20OSI%20%E4%B8%8E%20TCP_IP%20%E6%A8%A1%E5%9E%8B(%E4%B8%80)/</id>
    <published>2019-12-20T05:25:59.000Z</published>
    <updated>2019-12-20T05:25:06.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTkxMDAyYzBhZDMwN2NlZWIucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="一-OSI-与-TCP／IP-模型"><a href="#一-OSI-与-TCP／IP-模型" class="headerlink" title="(一) OSI 与 TCP／IP 模型"></a>(一) OSI 与 TCP／IP 模型</h5><p>本篇内容比较基础，只面向初级软件测试工程师面试时可能会被问到的关于网络方面的概念</p><h5 id="1-什么是通信，什么是媒体"><a href="#1-什么是通信，什么是媒体" class="headerlink" title="1.什么是通信，什么是媒体"></a>1.什么是通信，什么是媒体</h5><ul><li>通信是通过某种媒体进行的信息传递</li><li>传媒，就是传播各种信息的媒体<h5 id="2-带宽，速率，延迟"><a href="#2-带宽，速率，延迟" class="headerlink" title="2. 带宽，速率，延迟"></a>2. 带宽，速率，延迟</h5></li><li>带宽一般用来描述两种对象：一个是信道（Channel），另一个是信号（signal）。信道的带宽：单位是Hz ，信号的带宽：单位是bps <h5 id="3-协议，标准"><a href="#3-协议，标准" class="headerlink" title="3. 协议，标准"></a>3. 协议，标准</h5>协议包含：<blockquote><p>1、 实现什么功能 、怎么实现<br>2、 定义数据的封装格式标准则多了物理硬件的描述</p></blockquote><h5 id="4-网络的组成"><a href="#4-网络的组成" class="headerlink" title="4.网络的组成"></a>4.网络的组成</h5></li><li>一个简单的网络主要有三部分组成：需要通信或连网的计算机、通信介质、连网设备<h5 id="5-网络的分类"><a href="#5-网络的分类" class="headerlink" title="5.网络的分类"></a>5.网络的分类</h5></li></ul><p>1.局域网<br>2.广域网<br>3.城域网</p><h5 id="6-关于INTERNET"><a href="#6-关于INTERNET" class="headerlink" title="6.关于INTERNET"></a>6.关于INTERNET</h5><ul><li>Internet<br>本质上是一个计算机广域网<h5 id="7-网络通信系统设计中要解决的问题"><a href="#7-网络通信系统设计中要解决的问题" class="headerlink" title="7.网络通信系统设计中要解决的问题"></a>7.网络通信系统设计中要解决的问题</h5></li><li>数字传输</li></ul><p>1.模拟通信<br>2.数字通信</p><ul><li>数据通信方式</li></ul><ol><li>串行通讯，并行通讯</li><li>单工通信(举例：寻呼机)，半双工（举例：对讲机），全双工通讯（举例：电话）</li></ol><ul><li>数据通信类型</li></ul><p>1.基带传输<br>2.频带传输<br>3.宽带传输<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTZmOWQzY2IwZDVkZDE1MmIuanBlZw?x-oss-process=image/format,png" alt="博客素材2.jpeg"></p><h5 id="8-计算机互联参考模型――OSI模型"><a href="#8-计算机互联参考模型――OSI模型" class="headerlink" title="8.计算机互联参考模型――OSI模型"></a>8.计算机互联参考模型――OSI模型</h5><ul><li>OSI概述一个 独立的计算机系统的工作能力是有 限的， 只有将不同地区具有不同功能的计算机互连之 后，人们才  能共享计算机 强大的计算能力和信息资源。<br>ISO（International standard Organization 国际标准化组织）的OSI-RM（Open<br>System Interconnection Reference Model）是计算机网络及其互连的重要理论<br>，虽然目前没有完整的产品支持 该协议，  但它 对80年代后期至今 的电信网络、计算机网络及其互连 都有极深远 的影响，可以说OSI－RM 是各类网络互连设备的协议基础，也是我们 学习网络互连的理论基础 <h5 id="9-OSI-网络分层（非常重要初级测试工程师经常会被问到）"><a href="#9-OSI-网络分层（非常重要初级测试工程师经常会被问到）" class="headerlink" title="9. OSI 网络分层（非常重要初级测试工程师经常会被问到）"></a>9. OSI 网络分层（非常重要初级测试工程师经常会被问到）</h5></li><li>应用层</li><li>表示层</li><li>对话层</li><li>传输层</li><li>网络层</li><li>数据链路层</li><li>物理层<h5 id="9-传输协议与应用"><a href="#9-传输协议与应用" class="headerlink" title="9.传输协议与应用"></a>9.传输协议与应用</h5></li><li>TCP协议：可靠的面向链接的协议</li></ul><p>1.三次握手过程</p><blockquote><p>1.TCP SYN, 2.TCP ACK SYN, 3.TCP ACK</p></blockquote><ul><li>UDP协议： 不可靠无链接协议<h5 id="10-TCP-IP-模型（初级面试经常会被问）"><a href="#10-TCP-IP-模型（初级面试经常会被问）" class="headerlink" title="10. TCP/IP 模型（初级面试经常会被问）"></a>10. TCP/IP 模型（初级面试经常会被问）</h5></li><li>网络接口层，网络层，传输层，应用层<h5 id="本文只列出了初级测试面试时可能被问到的网络基础概念，后续有时间每块内容再详细的讲述下"><a href="#本文只列出了初级测试面试时可能被问到的网络基础概念，后续有时间每块内容再详细的讲述下" class="headerlink" title="本文只列出了初级测试面试时可能被问到的网络基础概念，后续有时间每块内容再详细的讲述下"></a>本文只列出了初级测试面试时可能被问到的网络基础概念，后续有时间每块内容再详细的讲述下</h5><img src="https://img-blog.csdnimg.cn/20191217181203182.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWE2ZDJhMGEwMDNlOTE4YmQucG5n?x-oss-process=image/format,png" alt=""><blockquote><p>欢迎下方【戳一下】【点赞】<br>Author：伊洛Yiluo<br>2019年12月17日<br>愿您享受每一天，Just Enjoy !</p></blockquote></li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTI1ZjMxMjEzZDEzNzJhZDMucG5n?x-oss-process=image/format,png" alt=""></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="软件测试基础" scheme="https://yiluotalk.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="软件测试基础" scheme="https://yiluotalk.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
      <category term="功能业务测试" scheme="https://yiluotalk.com/tags/%E5%8A%9F%E8%83%BD%E4%B8%9A%E5%8A%A1%E6%B5%8B%E8%AF%95/"/>
    
      <category term="测试理论" scheme="https://yiluotalk.com/tags/%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Python基础 Zero to Hero 异常的处理 (一)</title>
    <link href="https://yiluotalk.com/2019/12/20/Python%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20%E5%BC%82%E5%B8%B8%E7%9A%84%E5%A4%84%E7%90%86%20(%E4%B8%80)/"/>
    <id>https://yiluotalk.com/2019/12/20/Python%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20%E5%BC%82%E5%B8%B8%E7%9A%84%E5%A4%84%E7%90%86%20(%E4%B8%80)/</id>
    <published>2019-12-20T05:22:59.000Z</published>
    <updated>2019-12-20T05:22:52.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWFkMDg2NjVlOWViOGNlMGQucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="1-异常的定义"><a href="#1-异常的定义" class="headerlink" title="1. 异常的定义"></a>1. 异常的定义</h5><ul><li>异常处理，是<a href="https://zh.wikipedia.org/wiki/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80" target="_blank" rel="noopener" title="编程语言">编程语言</a>或计算机硬件里的一种机制，用于处理软件或信息系统中出现的异常状况（即超出程序正常执行流程的某些特殊条件）</li></ul><h5 id="2-错误和异常"><a href="#2-错误和异常" class="headerlink" title="2. 错误和异常"></a>2. 错误和异常</h5><ul><li>写程序的时候通常会出现错误，目前（至少）有两种可区分的错误：<code>语法错误</code>和 <code>异常</code></li><li>语法错误：又称<code>解析错误</code>，经常容易遇到</li><li>异常：即使语句或表达式在语法上是正确的，但在尝试执行时，它仍可能会引发错误<h5 id="3-简单的例子"><a href="#3-简单的例子" class="headerlink" title="3. 简单的例子"></a>3. 简单的例子</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">c = a + b</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure></li><li>上面很简单的代码执行后就会出错，因为并没有定义变量<code>a</code></li><li><code>Python</code>提供的<code>异常处理</code>方法来捕获并处理异常，处理方法为使用 <code>try，except</code>和 <code>finally</code> 三个<code>关键字</code><h5 id="3-try-except-的使用"><a href="#3-try-except-的使用" class="headerlink" title="3. try, except 的使用"></a>3. try, except 的使用</h5></li><li><code>try</code> 代码块中写可能会出现异常的代码</li><li><code>except</code> 代码块中添加处理异常的方法</li><li>来将上面的代码处理一下<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    c = a + b</span><br><span class="line">    print(c)</span><br><span class="line"><span class="keyword">except</span> NameError <span class="keyword">as</span> err:</span><br><span class="line">    print(<span class="string">'错误：&#123;&#125;'</span>.format(err))</span><br></pre></td></tr></table></figure></li><li>依旧没有赋值<code>a</code>变量</li><li>然后执行一下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：name <span class="string">'a'</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>错误提示变量<code>a</code>没有被定义</li><li><code>NameError</code>的指的是访问了一个<code>未定义的变量</code></li><li>常见的还有<code>SyntaxError ，IndexError ，KeyError ，ValueError ，AttributeError</code><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTI0OWM2MDk5OTI0MmQ5MzIuanBlZw?x-oss-process=image/format,png" alt=""></li></ul><h5 id="4-多个except"><a href="#4-多个except" class="headerlink" title="4.多个except"></a>4.多个except</h5><ul><li><code>except</code>可以有多个，每个处理不同类型的异常，也可以不写任何异常类型名称，则会处理所有<code>捕获</code>的<code>异常</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    c = a + b</span><br><span class="line">    print(c)</span><br><span class="line">    f = open(<span class="string">'/yiluo/bin/activate.txt'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> NameError <span class="keyword">as</span> err:</span><br><span class="line">    print(<span class="string">'错误：&#123;&#125;'</span>.format(err))</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> FileNotFoundError <span class="keyword">as</span> err2:</span><br><span class="line">    print(<span class="string">'错误：&#123;&#125;'</span>.format(err2))</span><br></pre></td></tr></table></figure></li><li>打开一个不存在的文件<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line">错误：[Errno <span class="number">2</span>] No such file <span class="keyword">or</span> directory: <span class="string">'/yiluo/bin/activate.txt'</span></span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li>系统抛出了<code>异常</code>，没有这个文件<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    c = a + b</span><br><span class="line">    f = open(<span class="string">'/yiluo/bin/activate.txt'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">'总之就是有错误'</span>)</span><br></pre></td></tr></table></figure></li><li>不写任何<code>异常</code>的<code>类型</code></li><li>运行一下<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">总之就是有错误</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><h5 id="5-finally的使用"><a href="#5-finally的使用" class="headerlink" title="5.finally的使用"></a>5.finally的使用</h5></li><li>使用 <code>finally</code> 可以保证无论 <code>try</code>代码块中的代码是否<code>抛出异常</code>，都能够执行 <code>finally</code> 代码块里的内容<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    c = a + b</span><br><span class="line">    f = open(<span class="string">'/yiluo/bin/activate.txt'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">'总之就是有错误'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    print(<span class="string">'结束异常'</span>)</span><br></pre></td></tr></table></figure></li><li>执行代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">总之就是有错误</span><br><span class="line">结束异常</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><code>finally</code>成功的运行了<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 伊洛Yiluo</span></span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    c = a + b</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">'总之就是有错误'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    print(<span class="string">'结束异常'</span>)</span><br></pre></td></tr></table></figure></li><li>没有任何的异常执行下，看下<code>finally</code>会不会被运行<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">结束异常</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><code>finally</code>成功运行<h5 id="6-抛出异常"><a href="#6-抛出异常" class="headerlink" title="6.抛出异常"></a>6.抛出异常</h5></li><li>如果希望程序执行过程中抛出异常，可以使用 <code>raise</code>语句<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">raise</span> NameError(<span class="string">'Error ERROR'</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: Error ERROR</span><br></pre></td></tr></table></figure></li><li>如上抛出了<code>&#39;Error ERROR&#39;</code>的异常<h5 id="……待续"><a href="#……待续" class="headerlink" title="……待续"></a>……待续</h5><img src="https://img-blog.csdnimg.cn/20191216160508205.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWJhZDM0OTJlYjM0ZjA1MzAucG5n?x-oss-process=image/format,png" alt=""></li></ul><blockquote><p>欢迎下方【戳一下】【点赞】<br>Author：伊洛Yiluo<br>2019年12月16日<br>愿您享受每一天，Just Enjoy !</p></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWRjOGFiMjlhNThjMjU0YWUucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Zero to Hero" scheme="https://yiluotalk.com/tags/Zero-to-Hero/"/>
    
  </entry>
  
  <entry>
    <title>项目管理 Zero to Hero 软件研发流程 理论 (一)</title>
    <link href="https://yiluotalk.com/2019/12/20/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%20Zero%20to%20Hero%20%E8%BD%AF%E4%BB%B6%E7%A0%94%E5%8F%91%E6%B5%81%E7%A8%8B%20%E7%90%86%E8%AE%BA%20(%E4%B8%80)/"/>
    <id>https://yiluotalk.com/2019/12/20/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%20Zero%20to%20Hero%20%E8%BD%AF%E4%BB%B6%E7%A0%94%E5%8F%91%E6%B5%81%E7%A8%8B%20%E7%90%86%E8%AE%BA%20(%E4%B8%80)/</id>
    <published>2019-12-20T05:20:59.000Z</published>
    <updated>2019-12-20T05:20:39.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTIxOTk4MzMwZDUxOWJhMTQucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="序（一点儿碎碎念）"><a href="#序（一点儿碎碎念）" class="headerlink" title="序（一点儿碎碎念）"></a>序（一点儿碎碎念）</h5><ul><li>互联网公司研发自己的<code>软件产品</code>，会有属于自己公司的一套整体<code>产研流程</code>。关于<code>项目流程</code>方面，太多的方式。但其实并没有最好的，只要是适合自己公司<code>产品迭代</code>的流程就是正确的</li><li>关于<code>产品质量</code>：一点小感悟，<code>产品质量</code>并不只能靠公司的测试人员来提升，要知道产品的质量不是测出来的而是<code>项目整体协作</code>一起艰难的<code>构建</code>出来的<h5 id="一-软件研发流程"><a href="#一-软件研发流程" class="headerlink" title="(一) 软件研发流程"></a>(一) 软件研发流程</h5><h5 id="1-软件产品"><a href="#1-软件产品" class="headerlink" title="1.软件产品"></a>1.软件产品</h5></li><li>大多数人认为，<code>软件产品</code>仅仅是从互联网上下载或者从光盘上安装到计算机上的程序</li><li>软件产品:是指向用户提供的<code>计算机软件</code>、<code>信息系统</code>或<code>设备</code>中嵌入的软件或在提供计算机<code>信息系统集成</code>、<code>应用服务</code>等技术服务时提供的计算机软件</li><li>软件是<code>计算机程序</code>、<code>程序</code>所用的<code>数据</code>以及有关<code>文档资料</code>的集合<h5 id="2-项目流程中经常可能会出现的文档"><a href="#2-项目流程中经常可能会出现的文档" class="headerlink" title="2.项目流程中经常可能会出现的文档"></a>2.项目流程中经常可能会出现的文档</h5></li><li>客户需求文档</li><li>产品需求文档</li><li>需求规格文档</li><li>项目计划文档</li><li>版本迭代计划文档</li><li>技术选型文档</li><li>竞争调研文档</li><li>产品设计文档</li><li>交互设计文档</li><li>项目进度文档</li><li>测试计划文档</li><li>测试方案文档</li><li>测试用例文档</li><li>研发接口文档</li><li>缺陷跟踪单（通常会使用bug管理工具 eg. JIRA）</li><li>测试报告文档</li><li>迭代复盘文档</li><li>迭代遗留问题<h5 id="3-软件工程"><a href="#3-软件工程" class="headerlink" title="3.软件工程"></a>3.软件工程</h5></li><li>1983年<code>IEEE</code>给软件工程下的定义是：“<code>软件工程</code>是<code>开发、运行、维护和修复</code>软件的系统方法。”这个定义相当概括，它主要强调软件工程是系统方法<br>而不是某种神秘的个人技巧</li><li><code>软件工程</code>是为了经济地获得可靠的且能在实际机器上有效地运行的软件，而建立和使用的<code>完善的工程化原则</code>。”这个定义不仅指出软件工程的目标是经济地开发出<code>高质量</code>的软件，而且强调了<code>软件工程</code>是一门工程学科，它应该建立并使用完善的工程化原则</li><li>1993年<code>IEEE</code>进一步给出了一个更全面的定义<br>简而言之：<code>系统化，规范化，可管理，</code>讲软件开发变成一项工程<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWNlMWVjMzAyODIzNmQ3NjIuanBlZw?x-oss-process=image/format,png" alt=""></li></ul><h5 id="4-软件项目流程中可能出现的成员"><a href="#4-软件项目流程中可能出现的成员" class="headerlink" title="4.软件项目流程中可能出现的成员"></a>4.软件项目流程中可能出现的成员</h5><ul><li>项目经理</li><li>技术总监／架构师／系统工程师</li><li>研发工程师／开发人员</li><li>产品总监／产品经理</li><li>设计总监／设计师</li><li>测试经理／测试组长／测试工程师</li><li>配置管理员</li><li>QA 质量管理人员</li><li>市场人员</li><li>其它人员<h5 id="5-软件通常开发的过程"><a href="#5-软件通常开发的过程" class="headerlink" title="5.软件通常开发的过程"></a>5.软件通常开发的过程</h5></li><li>软件产品从最初构思到公开发行的过程，称为软件开发过程</li><li>最常见的开发模型（<code>后续具体叙述</code>）</li></ul><p>1.瀑布模型<br>2.V模型<br>3.W模型<br>4.H模型<br>5.螺旋模型<br>6.快速原型</p><h5 id="6-软件研发流程模型的目的"><a href="#6-软件研发流程模型的目的" class="headerlink" title="6.软件研发流程模型的目的"></a>6.软件研发流程模型的目的</h5><ul><li>保证最终产品满足用户需求</li><li>提高产品质量，降低产品开发成本</li><li>保证项目可管理，进度可控制<h5 id="7-软件生命周期"><a href="#7-软件生命周期" class="headerlink" title="7.软件生命周期"></a>7.软件生命周期</h5>需求，设计，编码，测试，维护，升级，废弃<h5 id="待续（详细软件研发流程梳理）"><a href="#待续（详细软件研发流程梳理）" class="headerlink" title="待续（详细软件研发流程梳理）"></a>待续（详细软件研发流程梳理）</h5><img src="https://img-blog.csdnimg.cn/20191216102824448.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTYyYmMxOTRkMTE4Y2RlYmMucG5n?x-oss-process=image/format,png" alt=""></li></ul><blockquote><p>欢迎下方【戳一下】【点赞】<br>Author：伊洛Yiluo<br>2019年12月16日<br>愿您享受每一天，Just Enjoy !</p></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWI2OGE3OWQ3NGY2NWE0M2MucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="项目管理" scheme="https://yiluotalk.com/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="项目管理" scheme="https://yiluotalk.com/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
      <category term="项目经理" scheme="https://yiluotalk.com/tags/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E7%90%86/"/>
    
      <category term="测试经理" scheme="https://yiluotalk.com/tags/%E6%B5%8B%E8%AF%95%E7%BB%8F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Python基础进阶 Zero to Hero 表达式 lambda (一)</title>
    <link href="https://yiluotalk.com/2019/12/20/Python%E5%9F%BA%E7%A1%80%E8%BF%9B%E9%98%B6%20Zero%20to%20Hero%20%E8%A1%A8%E8%BE%BE%E5%BC%8F%20lambda%20(%E4%B8%80)/"/>
    <id>https://yiluotalk.com/2019/12/20/Python%E5%9F%BA%E7%A1%80%E8%BF%9B%E9%98%B6%20Zero%20to%20Hero%20%E8%A1%A8%E8%BE%BE%E5%BC%8F%20lambda%20(%E4%B8%80)/</id>
    <published>2019-12-20T05:18:59.000Z</published>
    <updated>2019-12-20T05:18:34.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTY2ODQ5ZWYzNjU3N2RjMGEucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="1-lambda-表达式"><a href="#1-lambda-表达式" class="headerlink" title="1.lambda 表达式"></a>1.lambda 表达式</h5><ul><li>当你在编程中想使用一个  <code>函数</code>，但是你又没想好名字。或者干脆这个<code>函数</code>你只是想使用一次，就没有必要费心去命名了。你可以写一个<code>匿名函数</code>，那么<code>lambda</code>无疑是最好的选择<h5 id="2-lambda简单的使用"><a href="#2-lambda简单的使用" class="headerlink" title="2.lambda简单的使用"></a>2.lambda简单的使用</h5></li><li>英雄释放<code>2次一骑当千</code>的技能<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>skills = <span class="keyword">lambda</span> skill: print(skill*<span class="number">2</span> + <span class="string">' '</span>+ <span class="string">'技能已经释放2次'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>skills(<span class="string">'一骑当千'</span>)</span><br><span class="line">一骑当千一骑当千 技能已经释放<span class="number">2</span>次</span><br></pre></td></tr></table></figure></li><li>显然<code>skills</code>就是一个<code>匿名函数</code>， <code>lambda</code> 返回值时不需要 <code>return</code> </li><li>该匿名函数等同于<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">skills</span><span class="params">(skill)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> print(skill*<span class="number">2</span> + <span class="string">' '</span>+ <span class="string">'技能已成功释放2次'</span>)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>skill = <span class="string">'一骑当先'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>skills(skill)</span><br><span class="line">一骑当先一骑当先 技能已成功释放<span class="number">2</span>次</span><br></pre></td></tr></table></figure><h5 id="3-lambda赋值给变量使用"><a href="#3-lambda赋值给变量使用" class="headerlink" title="3. lambda赋值给变量使用"></a>3. lambda赋值给变量使用</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>number = <span class="keyword">lambda</span> i: i<span class="number">-2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>number(<span class="number">1</span>)</span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(number(<span class="number">1</span>))</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><code>abs</code>是内置的<code>绝对值函数</code></li></ul><h5 id="4-lambda表达式来返回函数"><a href="#4-lambda表达式来返回函数" class="headerlink" title="4.lambda表达式来返回函数"></a>4.lambda表达式来返回函数</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(i)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> <span class="keyword">lambda</span> x: x + i</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = add(<span class="number">10</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f(<span class="number">1</span>)</span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f(<span class="number">2</span>)</span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f(<span class="number">100</span>)</span><br><span class="line"><span class="number">110</span></span><br></pre></td></tr></table></figure><h5 id="……待续"><a href="#……待续" class="headerlink" title="……待续"></a>……待续</h5><p><img src="https://img-blog.csdnimg.cn/20191214124145387.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTQ5ZDY4OWI0MDA4YTk0ZTIucG5n?x-oss-process=image/format,png" alt=""></p><blockquote><p>享受每一天，Just Enjoy !</p></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWM2NmQyZjcyYzQzNWViM2UucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Python基础" scheme="https://yiluotalk.com/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Zero to Hero" scheme="https://yiluotalk.com/tags/Zero-to-Hero/"/>
    
  </entry>
  
  <entry>
    <title>软件测试性能基础 Zero to Hero 性能测试理论 (一)</title>
    <link href="https://yiluotalk.com/2019/12/20/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%80%A7%E8%83%BD%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA%20(%E4%B8%80)/"/>
    <id>https://yiluotalk.com/2019/12/20/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%80%A7%E8%83%BD%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA%20(%E4%B8%80)/</id>
    <published>2019-12-20T05:15:59.000Z</published>
    <updated>2019-12-20T05:16:27.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTQxMWRjZTJlODhmODBhZTkucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="1-为什么要做性能测试"><a href="#1-为什么要做性能测试" class="headerlink" title="1. 为什么要做性能测试"></a>1. 为什么要做性能测试</h5><ul><li>客户要求</li><li>领导要求</li><li>技术负责人想知道性能基本的指标</li><li>程序大佬想了解自己的系统在长时间压力下的运行情况<h5 id="2-性能测试的定义"><a href="#2-性能测试的定义" class="headerlink" title="2. 性能测试的定义"></a>2. 性能测试的定义</h5></li><li>性能测试是通过自动化测试工具模拟多种<code>正常</code>、<code>峰值</code>以及<code>异常负载</code>条件来<br>对系统的各项<code>性能指标</code>进行测试<h5 id="3-性能测试范围"><a href="#3-性能测试范围" class="headerlink" title="3. 性能测试范围"></a>3. 性能测试范围</h5></li><li>性能范围：系统的性能是一个很大的概念，覆盖面非常广泛，对一个软件系统而言包括：<code>执行效率、资源占用、系统稳定性、安全性、兼容性、可靠性、可扩展性</code></li><li>负载测试：通过测试系统在资源超负荷情况下的表现，以发现设计上的错误或验证系统的负载能力。<code>负载测试</code>的目标是确定并确保系统在超出最大预期工作量的情况下仍能正常运行</li><li>压力测试：对系统不断施加压力的测试，是通过确定一个系统的瓶颈或者不能接收的性能点，来获得系统能提供的最大服务级别的测试。<code>压力测试</code>是为了发现在什么条件下您的应用程序的<code>性能</code>会变得不可接受<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWViYjYwNTg5NGMzZTE2OTkuanBlZw?x-oss-process=image/format,png" alt=""></li></ul><h6 id="4-性能测试的类别"><a href="#4-性能测试的类别" class="headerlink" title="4.性能测试的类别"></a>4.性能测试的类别</h6><ul><li>配置测试：配置测试主要是通过测试找到系统各项资源的最佳分配原则。例如<br>我们 可以不 停的调整<code>oracle</code>的<code>内存</code>来决定<code>cpu</code>和<code>内存</code>的匹配情况。<br>(当前配置-调优-未来业务增长）</li><li>容量测试：测试系统能够处理的最大会话能力。确定系统可处理 同时在线的最大用户数，通常和<code>数据库</code>有关</li><li>可靠性测试：加载一定的<code>业务压力</code>（比如直到<code>Cpu资源</code>在高使用率）的情况下，运行一段时间，检查系统是否稳定</li><li>失败测试：对于有<code>冗余备份</code>和<code>负载均衡</code>的系统，通过这样的测试来检验如果系统局部发生故障用户是否能够继续使用系统，用户受到多大的影响<h5 id="5-性能测试指标"><a href="#5-性能测试指标" class="headerlink" title="5.性能测试指标"></a>5.性能测试指标</h5><blockquote><ul><li>事物</li><li>响应时间</li><li>点击率</li><li>吞吐量</li><li>并发用户</li><li>资源利用率</li></ul></blockquote><h6 id="6-性能测试流程"><a href="#6-性能测试流程" class="headerlink" title="6.性能测试流程"></a>6.性能测试流程</h6></li><li>分析被测系统，理解性能需求</li><li>编写性能计划和测试用例，测试场景</li><li>编写脚本(<code>jmeter, loadrunner, locust</code>)</li><li>执行测试</li><li>分析结果，输出<code>测试报告</code></li><li>性能调优<h6 id="7…-待续（常用性能测试工具介绍，Jmeter-Loadrunner-Python-Locust-）"><a href="#7…-待续（常用性能测试工具介绍，Jmeter-Loadrunner-Python-Locust-）" class="headerlink" title="7…..待续（常用性能测试工具介绍，Jmeter,Loadrunner,Python Locust.....）"></a>7…..待续（常用性能测试工具介绍，<code>Jmeter,Loadrunner,Python Locust.....</code>）</h6><img src="https://img-blog.csdnimg.cn/20191213152239168.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTk0MjFhNmY3MmY1YjFhZmUucG5n?x-oss-process=image/format,png" alt=""><blockquote><p>享受每一天，Just Enjoy !</p></blockquote></li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTE2ZjU3ZjgyZWRiYzY0YmIucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="性能测试" scheme="https://yiluotalk.com/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Zero to Hero" scheme="https://yiluotalk.com/tags/Zero-to-Hero/"/>
    
      <category term="性能测试" scheme="https://yiluotalk.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Python 自动化测试实战 Zero to Hero 单元测试框架unittest的使用 (一)</title>
    <link href="https://yiluotalk.com/2019/12/20/Python%20%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%20Zero%20to%20Hero%20%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6unittest%E7%9A%84%E4%BD%BF%E7%94%A8%20(%E4%B8%80)/"/>
    <id>https://yiluotalk.com/2019/12/20/Python%20%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%20Zero%20to%20Hero%20%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6unittest%E7%9A%84%E4%BD%BF%E7%94%A8%20(%E4%B8%80)/</id>
    <published>2019-12-20T05:12:59.000Z</published>
    <updated>2019-12-20T05:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTkxMDU4NjAwNzk4NzVlNTcucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="1-unittest-简介"><a href="#1-unittest-简介" class="headerlink" title="1. unittest 简介"></a>1. unittest 简介</h5><ul><li><code>unittest</code>单元测试框架是受到  <code>JUnit</code> 的启发，与其他语言中的主流单元测试框架有着相似的风格，支持将测试样例聚合到测试集中，并将测试与报告框架独立<h5 id="2-unittest应用实例"><a href="#2-unittest应用实例" class="headerlink" title="2. unittest应用实例"></a>2. unittest应用实例</h5></li><li><code>unittest</code> 不需要额外安装，可以直接<code>import</code>使用，来看一下<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ source yiluo/bin/activate</span><br><span class="line">(yiluo) ➜  ~ python</span><br><span class="line">Python <span class="number">3.7</span><span class="number">.5</span> (default, Nov <span class="number">29</span> <span class="number">2019</span>, <span class="number">14</span>:<span class="number">32</span>:<span class="number">46</span>)</span><br><span class="line">[Clang <span class="number">9.0</span><span class="number">.0</span> (clang<span class="number">-900.0</span><span class="number">.39</span><span class="number">.2</span>)] on darwin</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> <span class="keyword">or</span> <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> unittest</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></li><li>没有<code>报错</code>，说明引入成功了，下面来具体看一个<code>实例</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VerifySkillTestCase</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_verify_skill1</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(skill1, <span class="string">'一骑当千'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_verify_skill2</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(skill2, <span class="string">'单刀赴会'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    hero = <span class="string">'关羽'</span></span><br><span class="line">    skill1 = <span class="string">'一骑当千'</span></span><br><span class="line">    skill2 = <span class="string">'单刀赴会'</span></span><br><span class="line">    skill3 = <span class="string">'青龙偃月'</span></span><br><span class="line">    skill4 = <span class="string">'刀锋铁骑'</span></span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure></li><li>继承 <code>unittest.TestCase</code>就创建了一个测试样例</li><li>测试是三个类的方法，这些方法的命名都以 <code>test</code> 开头,只有<code>test</code>开头的才会被认为是用例</li><li>调用 <code>assertEqual()</code>来检查预期的输出，判断英雄的技能是否正确</li><li>常用的校验方法有</li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTQ5YzI2MDkwMGQzZjZkZTYucG5n?x-oss-process=image/format,png" alt="图片来源官网"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(yiluo) ➜  Code python test.py</span><br><span class="line">..</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Ran <span class="number">2</span> tests <span class="keyword">in</span> <span class="number">0.000</span>s</span><br><span class="line"></span><br><span class="line">OK</span><br></pre></td></tr></table></figure><ul><li><p>2条用例校验通过</p><h5 id="3-setUp-与-tearDown的使用"><a href="#3-setUp-与-tearDown的使用" class="headerlink" title="3. setUp 与 tearDown的使用"></a>3. setUp 与 tearDown的使用</h5></li><li><p><code>setUp</code> 测试<code>前置条件</code></p></li><li><p><code>tearDown</code> 测试<code>后置条件</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VerifySkillTestCase</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'检验英雄&#123;&#125;技能'</span>.format(hero))</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_verify_skill1</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(skill1, <span class="string">'一骑当千'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_verify_skill2</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(skill2, <span class="string">'单刀赴会'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'英雄&#123;&#125;技能校验完毕'</span>.format(hero))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    hero = <span class="string">'关羽'</span></span><br><span class="line">    skill1 = <span class="string">'一骑当千'</span></span><br><span class="line">    skill2 = <span class="string">'单刀赴会'</span></span><br><span class="line">    skill3 = <span class="string">'青龙偃月'</span></span><br><span class="line">    skill4 = <span class="string">'刀锋铁骑'</span></span><br><span class="line">    unittest.main(verbosity=<span class="number">2</span>)</span><br></pre></td></tr></table></figure></li><li><p>执行看一下结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(yiluo) ➜  Code python test.py</span><br><span class="line">test_verify_skill1 (__main__.VerifySkillTestCase) ... 检验英雄关羽技能</span><br><span class="line">英雄关羽技能校验完毕</span><br><span class="line">ok</span><br><span class="line">test_verify_skill2 (__main__.VerifySkillTestCase) ... 检验英雄关羽技能</span><br><span class="line">英雄关羽技能校验完毕</span><br><span class="line">ok</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Ran <span class="number">2</span> tests <span class="keyword">in</span> <span class="number">0.001</span>s</span><br><span class="line"></span><br><span class="line">OK</span><br></pre></td></tr></table></figure></li><li><p>如上校验了英雄的<code>1技能</code>和<code>2技能</code>，每次用例的开始会执行<code>setup</code>的<code>前置条件</code>，结束后又会执行<code>tearDown</code></p></li><li><p>不过比如我们实际使用中，如果获取用户登陆的<code>token</code> ，其实获取一次就可以了，并不需要每次都执行获取<code>token</code>的接口，那要如何处理呢</p><h5 id="4-setUpClass-与-tearDownClass的使用"><a href="#4-setUpClass-与-tearDownClass的使用" class="headerlink" title="4. setUpClass 与 tearDownClass的使用"></a>4. setUpClass 与 tearDownClass的使用</h5></li><li><p><code>前置条件</code>和<code>后置条件</code>还可以通过<code>setUpClass</code>和<code>tearDownClass</code>方法来操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VerifySkillTestCase</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUpClass</span><span class="params">(cls)</span>:</span></span><br><span class="line">        print(<span class="string">'检验英雄&#123;&#125;技能'</span>.format(hero))</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_verify_skill1</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(skill1, <span class="string">'一骑当千'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_verify_skill2</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(skill2, <span class="string">'单刀赴会'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_verify_skill3</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(skill3, <span class="string">'青龙偃月'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDownClass</span><span class="params">(cls)</span>:</span></span><br><span class="line">        print(<span class="string">'英雄&#123;&#125;技能校验完毕'</span>.format(hero))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    hero = <span class="string">'关羽'</span></span><br><span class="line">    skill1 = <span class="string">'一骑当千'</span></span><br><span class="line">    skill2 = <span class="string">'单刀赴会'</span></span><br><span class="line">    skill3 = <span class="string">'青龙偃月'</span></span><br><span class="line">    skill4 = <span class="string">'刀锋铁骑'</span></span><br><span class="line">    unittest.main(verbosity=<span class="number">2</span>)</span><br></pre></td></tr></table></figure></li><li><p><code>@classmethod</code> 是类方法，如果不熟悉的小伙伴可以翻一下之前 伊洛 写的这篇文章<br><a href="https://www.jianshu.com/p/2bb5696a2549" target="_blank" rel="noopener">Python基础 Zero to Hero面向对象编程(二)</a></p></li><li><p>现在运行一下并查看结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(yiluo) ➜  Code python test.py</span><br><span class="line">检验英雄关羽技能</span><br><span class="line">test_verify_skill1 (__main__.VerifySkillTestCase) ... ok</span><br><span class="line">test_verify_skill2 (__main__.VerifySkillTestCase) ... ok</span><br><span class="line">test_verify_skill3 (__main__.VerifySkillTestCase) ... ok</span><br><span class="line">英雄关羽技能校验完毕</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Ran <span class="number">3</span> tests <span class="keyword">in</span> <span class="number">0.000</span>s</span><br><span class="line"></span><br><span class="line">OK</span><br></pre></td></tr></table></figure></li><li><p>可以看到只有开始和执行了<code>前置条件</code>，结束后执行了一次<code>后置条件</code><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWM4OGFkZDlkNDY0MGFmZDAuanBlZw?x-oss-process=image/format,png" alt=""></p></li></ul><h5 id="5-跳过测试用例"><a href="#5-跳过测试用例" class="headerlink" title="5.跳过测试用例"></a>5.跳过测试用例</h5><ul><li>实际工作测试中肯定有需要一些用例不执行，那么要如何处理<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VerifySkillTestCase</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUpClass</span><span class="params">(cls)</span>:</span></span><br><span class="line">        print(<span class="string">'检验英雄&#123;&#125;技能'</span>.format(hero))</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_verify_skill1</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(skill1, <span class="string">'一骑当千'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @unittest.skip('不校验英雄2技能')</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_verify_skill2</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(skill2, <span class="string">'单刀赴会'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_verify_skill3</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(skill3, <span class="string">'青龙偃月'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDownClass</span><span class="params">(cls)</span>:</span></span><br><span class="line">        print(<span class="string">'英雄&#123;&#125;技能校验完毕'</span>.format(hero))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    hero = <span class="string">'关羽'</span></span><br><span class="line">    skill1 = <span class="string">'一骑当千'</span></span><br><span class="line">    skill2 = <span class="string">'单刀赴会'</span></span><br><span class="line">    skill3 = <span class="string">'青龙偃月'</span></span><br><span class="line">    skill4 = <span class="string">'刀锋铁骑'</span></span><br><span class="line">    unittest.main(verbosity=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><blockquote><p>@unittest.skip(reason) 跳过被此装饰器装饰的测试。 reason 为测试被跳过的原因<br>@unittest.skipIf(condition, reason) 当 condition 为真时，跳过被装饰的测试<br>@unittest.skipUnless(condition, reason)  跳过被装饰的测试，除非 condition 为真<br>@unittest.expectedFailure 把测试标记为预计失败。如果测试不通过，会被认为测试成功；如果测试通过了，则被认为是测试失败<br>exception unittest.SkipTest(reason) 引发此异常以跳过一个测试</p></blockquote></li><li>最后来看一下运行的结果<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(yiluo) ➜  Code python test.py</span><br><span class="line">检验英雄关羽技能</span><br><span class="line">test_verify_skill1 (__main__.VerifySkillTestCase) ... ok</span><br><span class="line">test_verify_skill2 (__main__.VerifySkillTestCase) ... skipped <span class="string">'不校验英雄2技能'</span></span><br><span class="line">test_verify_skill3 (__main__.VerifySkillTestCase) ... ok</span><br><span class="line">英雄关羽技能校验完毕</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Ran <span class="number">3</span> tests <span class="keyword">in</span> <span class="number">0.000</span>s</span><br><span class="line"></span><br><span class="line">OK (skipped=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li><li>结果英雄的<code>2技能</code>测试确实跳过了并没有执行<h5 id="6……-待续（批量执行测试用例……"><a href="#6……-待续（批量执行测试用例……" class="headerlink" title="6…….待续（批量执行测试用例……)"></a>6…….待续（批量执行测试用例……)</h5><img src="https://img-blog.csdnimg.cn/20191213135421146.jpeg" alt="在这里插入图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWQyNDM4Mzg2MDI0YzRmMDQucG5n?x-oss-process=image/format,png" alt=""><blockquote><p>享受每一天，Just Enjoy !</p></blockquote></li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTNjYzFkMjM2NjkxYzQ3YTcucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="自动化测试" scheme="https://yiluotalk.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="UI自动化测试" scheme="https://yiluotalk.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="接口自动化测试" scheme="https://yiluotalk.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="测试开发" scheme="https://yiluotalk.com/categories/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="测试开发" scheme="https://yiluotalk.com/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
      <category term="自动化测试" scheme="https://yiluotalk.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="UI自动化测试" scheme="https://yiluotalk.com/tags/UI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="接口自动化测试" scheme="https://yiluotalk.com/tags/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>软件测试理论基础 Zero to Hero 黑盒测试用例设计方法 (一)</title>
    <link href="https://yiluotalk.com/2019/12/20/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20%E6%B5%8B%E8%AF%95%E6%89%A7%E8%A1%8C%E5%8F%8ABug%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%20(%E4%B8%80)/"/>
    <id>https://yiluotalk.com/2019/12/20/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20%E6%B5%8B%E8%AF%95%E6%89%A7%E8%A1%8C%E5%8F%8ABug%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%20(%E4%B8%80)/</id>
    <published>2019-12-20T05:08:59.000Z</published>
    <updated>2019-12-20T05:08:39.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLThjNjJjMWE0YmJjMGNhYmMucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="1-测试执行"><a href="#1-测试执行" class="headerlink" title="1.测试执行"></a>1.测试执行</h5><ul><li>执行测试用例：根据已有的测试用例，按照里面的步骤一步一步的执行，查看预期结果与实际结果是否一致</li><li>用例执行结果<blockquote><p>1.当用例还尚未被执行时，是NoTest未执行状态</p></blockquote></li></ul><p>2.当执行结果与预期结果相符时，是Pass通过状态<br>3.当执行结果与预期结果不符时，是Fail失败状态<br>4.当因为软件有缺陷而妨碍了用例步骤的执行，且该缺陷并不是我们的测试点，则用例是Block阻碍状态</p><h5 id="2-软件缺陷"><a href="#2-软件缺陷" class="headerlink" title="2.软件缺陷"></a>2.软件缺陷</h5><ul><li>缺陷的定义：缺陷又名为BUG，指软件未实现需求和规格要求的功能</li><li>缺陷的原因一般分为：需求与规格，设计，编码，其它</li><li>缺陷的分布特征：80%的缺陷出现在 20%的模块</li><li>bug是解决不完的，并非所有的缺陷都需要修复</li><li>缺陷的生命周期：提交bug ,分配bug，处理bug ,验证bug ，关闭bug<h5 id="3-缺陷的生命周期"><a href="#3-缺陷的生命周期" class="headerlink" title="3.缺陷的生命周期"></a>3.缺陷的生命周期</h5></li><li>New／Open／Fixed／Rejected／Reopen／Closed</li><li>缺陷的严重等级：不同的公司定义不同，可以根据业务的实际情况，通常分为<br>致命，严重，一般，轻微</li><li>缺陷单的编写：一个好的缺陷单，是你提交之后就再也没人联系你，然后过了一段时间已经被完美地修复，可以直接验证就ok的<h5 id="4-缺陷应该有的基本要素"><a href="#4-缺陷应该有的基本要素" class="headerlink" title="4. 缺陷应该有的基本要素"></a>4. 缺陷应该有的基本要素</h5><blockquote><p>缺陷ID，缺陷复现步骤，缺陷标题，期望结果 ，测试环境 ,实际结果,缺陷发现的日期和时间, 附件,缺陷提交人,缺陷的优先级,缺陷的严重等级, 测试类型,发现缺陷的软件版本</p></blockquote><h5 id="……待续"><a href="#……待续" class="headerlink" title="……待续"></a>……待续</h5><img src="https://img-blog.csdnimg.cn/2019121310371940.jpeg" alt="在这里插入图片描述"><blockquote><p>享受每一天，Just Enjoy !</p></blockquote></li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLWZmYWZhYWU0NGVhNDYyYzIucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="软件测试基础" scheme="https://yiluotalk.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="软件测试基础" scheme="https://yiluotalk.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
      <category term="功能业务测试" scheme="https://yiluotalk.com/tags/%E5%8A%9F%E8%83%BD%E4%B8%9A%E5%8A%A1%E6%B5%8B%E8%AF%95/"/>
    
      <category term="测试理论" scheme="https://yiluotalk.com/tags/%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>软件测试理论基础 Zero to Hero 测试报告该如何写 (一)</title>
    <link href="https://yiluotalk.com/2019/12/20/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A%E8%AF%A5%E5%A6%82%E4%BD%95%E5%86%99%20(%E4%B8%80)/"/>
    <id>https://yiluotalk.com/2019/12/20/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80%20Zero%20to%20Hero%20%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A%E8%AF%A5%E5%A6%82%E4%BD%95%E5%86%99%20(%E4%B8%80)/</id>
    <published>2019-12-20T05:07:59.000Z</published>
    <updated>2019-12-20T05:09:55.000Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTk2NTRiYmI1ZTMwOTNlZGEucG5n?x-oss-process=image/format,png" alt=""></p><h5 id="1-测试报告"><a href="#1-测试报告" class="headerlink" title="1.测试报告"></a>1.测试报告</h5><ul><li>测试报告主要内容：项目数据统计，遗留bug情况，测试的风险，测试对象评估，测试结论<h5 id="2-数据统计"><a href="#2-数据统计" class="headerlink" title="2.数据统计"></a>2.数据统计</h5></li><li>包括：人力投入，时间投入，工作量，用例覆盖率，问题单分类统计（bug严重等级统计，bug统计类型，bug统计状态，bug跟进问题表单）<h5 id="3-遗留bug情况"><a href="#3-遗留bug情况" class="headerlink" title="3.遗留bug情况"></a>3.遗留bug情况</h5></li><li>包括：缺陷编号，缺陷描述，影响程度，后续解决措施，当前规避方法<h5 id="4-测试风险"><a href="#4-测试风险" class="headerlink" title="4.测试风险"></a>4.测试风险</h5></li><li>包括：风险的复现概率，是否定位到了问题，对线上用户的影响，可能带来的负面结果<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTQ5YTMwNTYwY2Y5YmU2YzcuanBlZw?x-oss-process=image/format,png" alt=""></li></ul><h5 id="5-测试对象评估"><a href="#5-测试对象评估" class="headerlink" title="5.测试对象评估"></a>5.测试对象评估</h5><ul><li>包括：功能评估，性能评估，稳定性评估，易用性评估，其它评估<h5 id="6-测试结论"><a href="#6-测试结论" class="headerlink" title="6.测试结论"></a>6.测试结论</h5></li><li>包括：质量的评价，测试结论，评估的人员，审核人员</li><li>测试结果分析：分析整个项目测试过程中遇到的问题及造成问题的原因</li><li>测试总结：回顾整个项目的测试过程，总结个人成长经验，取得什么成绩、有哪些不足、有什么好的经验或者方法，对工作进行复盘<h5 id="7-复盘会"><a href="#7-复盘会" class="headerlink" title="7.复盘会"></a>7.复盘会</h5></li><li>如果每次版本迭代问题比较多或者进度比较慢，测试部门可以发起项目复盘会<h5 id="……待续"><a href="#……待续" class="headerlink" title="……待续"></a>……待续</h5><img src="https://img-blog.csdnimg.cn/2019121311020433.jpeg" alt="在这里插入图片描述"><blockquote><p>享受每一天，Just Enjoy !</p></blockquote></li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxLTQ0Mjk2ZDJhM2FkOTg0OWMucG5n?x-oss-process=image/format,png" alt="关注公众号获取更多内容"></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "18933-1576860332987-627",        "name": "伊洛的小屋",        "qrcode": "https://open.weixin.qq.com/qr/code?username=gh_7972411ff70e",        "keyword": "vip"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81OTU5NTUxL
      
    
    </summary>
    
    
      <category term="软件测试基础" scheme="https://yiluotalk.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="软件测试基础" scheme="https://yiluotalk.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
      <category term="功能业务测试" scheme="https://yiluotalk.com/tags/%E5%8A%9F%E8%83%BD%E4%B8%9A%E5%8A%A1%E6%B5%8B%E8%AF%95/"/>
    
      <category term="测试理论" scheme="https://yiluotalk.com/tags/%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
</feed>
